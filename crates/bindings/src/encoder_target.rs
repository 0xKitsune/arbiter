pub use encoder_target::*;
/// This module was auto-generated with ethers-rs Abigen.
/// More information at: <https://github.com/gakonst/ethers-rs>
#[allow(
    clippy::enum_variant_names,
    clippy::too_many_arguments,
    clippy::upper_case_acronyms,
    clippy::type_complexity,
    dead_code,
    non_camel_case_types
)]
pub mod encoder_target {
    #[rustfmt::skip]
    const __ABI: &str = "[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"shouldAllocate\",\"type\":\"bool\",\"components\":[]},{\"internalType\":\"uint8\",\"name\":\"useMax\",\"type\":\"uint8\",\"components\":[]},{\"internalType\":\"uint64\",\"name\":\"poolId\",\"type\":\"uint64\",\"components\":[]},{\"internalType\":\"uint128\",\"name\":\"deltaLiquidity\",\"type\":\"uint128\",\"components\":[]}],\"stateMutability\":\"pure\",\"type\":\"function\",\"name\":\"allocateOrDeallocate\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"quote\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"pure\",\"type\":\"function\",\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"pairId\",\"type\":\"uint24\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint16\",\"name\":\"priorityFee\",\"type\":\"uint16\",\"components\":[]},{\"internalType\":\"uint16\",\"name\":\"fee\",\"type\":\"uint16\",\"components\":[]},{\"internalType\":\"uint16\",\"name\":\"vol\",\"type\":\"uint16\",\"components\":[]},{\"internalType\":\"uint16\",\"name\":\"dur\",\"type\":\"uint16\",\"components\":[]},{\"internalType\":\"uint16\",\"name\":\"jit\",\"type\":\"uint16\",\"components\":[]},{\"internalType\":\"uint128\",\"name\":\"maxPrice\",\"type\":\"uint128\",\"components\":[]},{\"internalType\":\"uint128\",\"name\":\"price\",\"type\":\"uint128\",\"components\":[]}],\"stateMutability\":\"pure\",\"type\":\"function\",\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"useMax\",\"type\":\"uint8\",\"components\":[]},{\"internalType\":\"uint64\",\"name\":\"poolId\",\"type\":\"uint64\",\"components\":[]},{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\",\"components\":[]},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\",\"components\":[]},{\"internalType\":\"uint8\",\"name\":\"sellAsset\",\"type\":\"uint8\",\"components\":[]}],\"stateMutability\":\"pure\",\"type\":\"function\",\"name\":\"swap\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\",\"components\":[]}]}]";
    ///The parsed JSON ABI of the contract.
    pub static ENCODERTARGET_ABI: ::ethers::contract::Lazy<::ethers::core::abi::Abi> =
        ::ethers::contract::Lazy::new(|| {
            ::ethers::core::utils::__serde_json::from_str(__ABI).expect("ABI is always valid")
        });
    #[rustfmt::skip]
    const __BYTECODE: &[u8] = &[
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        16,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        8,
        19,
        128,
        97,
        0,
        32,
        96,
        0,
        57,
        96,
        0,
        243,
        254,
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        16,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        4,
        54,
        16,
        97,
        0,
        76,
        87,
        96,
        0,
        53,
        96,
        224,
        28,
        128,
        99,
        64,
        181,
        78,
        142,
        20,
        97,
        0,
        81,
        87,
        128,
        99,
        87,
        34,
        245,
        243,
        20,
        97,
        0,
        122,
        87,
        128,
        99,
        199,
        143,
        65,
        131,
        20,
        97,
        0,
        141,
        87,
        128,
        99,
        201,
        198,
        83,
        150,
        20,
        97,
        0,
        160,
        87,
        91,
        96,
        0,
        128,
        253,
        91,
        97,
        0,
        100,
        97,
        0,
        95,
        54,
        96,
        4,
        97,
        3,
        227,
        86,
        91,
        97,
        0,
        246,
        86,
        91,
        96,
        64,
        81,
        97,
        0,
        113,
        145,
        144,
        97,
        4,
        149,
        86,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        243,
        91,
        97,
        0,
        100,
        97,
        0,
        136,
        54,
        96,
        4,
        97,
        5,
        19,
        86,
        91,
        97,
        1,
        23,
        86,
        91,
        97,
        0,
        100,
        97,
        0,
        155,
        54,
        96,
        4,
        97,
        5,
        120,
        86,
        91,
        97,
        1,
        48,
        86,
        91,
        97,
        0,
        100,
        97,
        0,
        174,
        54,
        96,
        4,
        97,
        5,
        211,
        86,
        91,
        96,
        64,
        128,
        81,
        96,
        3,
        96,
        250,
        27,
        96,
        32,
        130,
        1,
        82,
        107,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        25,
        96,
        96,
        148,
        133,
        27,
        129,
        22,
        96,
        33,
        131,
        1,
        82,
        146,
        144,
        147,
        27,
        144,
        145,
        22,
        96,
        53,
        131,
        1,
        82,
        128,
        81,
        96,
        41,
        129,
        132,
        3,
        1,
        129,
        82,
        96,
        73,
        144,
        146,
        1,
        144,
        82,
        144,
        86,
        91,
        96,
        96,
        97,
        1,
        9,
        138,
        138,
        138,
        138,
        138,
        138,
        138,
        138,
        138,
        97,
        1,
        71,
        86,
        91,
        154,
        153,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        96,
        97,
        1,
        38,
        134,
        134,
        134,
        134,
        134,
        97,
        1,
        185,
        86,
        91,
        150,
        149,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        96,
        97,
        1,
        62,
        133,
        133,
        133,
        133,
        97,
        2,
        152,
        86,
        91,
        149,
        148,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        96,
        96,
        0,
        128,
        97,
        1,
        85,
        133,
        97,
        3,
        63,
        86,
        91,
        145,
        80,
        145,
        80,
        96,
        0,
        128,
        97,
        1,
        101,
        134,
        97,
        3,
        63,
        86,
        91,
        145,
        80,
        145,
        80,
        96,
        11,
        96,
        248,
        27,
        142,
        142,
        142,
        142,
        142,
        142,
        142,
        96,
        52,
        140,
        140,
        140,
        140,
        96,
        64,
        81,
        96,
        32,
        1,
        97,
        1,
        151,
        157,
        156,
        155,
        154,
        153,
        152,
        151,
        150,
        149,
        148,
        147,
        146,
        145,
        144,
        97,
        6,
        6,
        86,
        91,
        96,
        64,
        81,
        96,
        32,
        129,
        131,
        3,
        3,
        129,
        82,
        144,
        96,
        64,
        82,
        148,
        80,
        80,
        80,
        80,
        80,
        153,
        152,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        96,
        96,
        0,
        128,
        97,
        1,
        199,
        134,
        97,
        3,
        63,
        86,
        91,
        145,
        80,
        145,
        80,
        96,
        0,
        128,
        97,
        1,
        215,
        135,
        97,
        3,
        63,
        86,
        91,
        145,
        80,
        145,
        80,
        97,
        2,
        20,
        138,
        96,
        248,
        27,
        135,
        96,
        255,
        22,
        96,
        1,
        20,
        97,
        2,
        2,
        87,
        96,
        5,
        96,
        248,
        27,
        96,
        4,
        145,
        144,
        145,
        27,
        96,
        15,
        96,
        252,
        27,
        22,
        23,
        144,
        86,
        91,
        96,
        4,
        27,
        96,
        15,
        96,
        252,
        27,
        22,
        96,
        3,
        96,
        249,
        27,
        23,
        144,
        86,
        91,
        96,
        64,
        128,
        81,
        96,
        1,
        96,
        1,
        96,
        248,
        27,
        3,
        25,
        146,
        131,
        22,
        96,
        32,
        130,
        1,
        82,
        96,
        192,
        155,
        144,
        155,
        27,
        96,
        1,
        96,
        1,
        96,
        192,
        27,
        3,
        25,
        22,
        96,
        33,
        140,
        1,
        82,
        96,
        27,
        96,
        248,
        27,
        96,
        41,
        140,
        1,
        82,
        96,
        248,
        149,
        134,
        27,
        130,
        22,
        96,
        42,
        140,
        1,
        82,
        96,
        128,
        148,
        133,
        27,
        96,
        1,
        96,
        1,
        96,
        128,
        27,
        3,
        25,
        144,
        129,
        22,
        96,
        43,
        141,
        1,
        82,
        147,
        144,
        149,
        27,
        22,
        96,
        59,
        138,
        1,
        82,
        144,
        145,
        27,
        22,
        96,
        60,
        135,
        1,
        82,
        128,
        81,
        96,
        44,
        129,
        136,
        3,
        1,
        129,
        82,
        96,
        76,
        144,
        150,
        1,
        144,
        82,
        80,
        146,
        148,
        147,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        96,
        96,
        0,
        128,
        97,
        2,
        166,
        132,
        97,
        3,
        63,
        86,
        91,
        145,
        80,
        145,
        80,
        97,
        2,
        221,
        134,
        96,
        248,
        27,
        136,
        97,
        2,
        203,
        87,
        96,
        3,
        96,
        248,
        27,
        96,
        4,
        145,
        144,
        145,
        27,
        96,
        15,
        96,
        252,
        27,
        22,
        23,
        144,
        86,
        91,
        96,
        4,
        27,
        96,
        15,
        96,
        252,
        27,
        22,
        96,
        1,
        96,
        248,
        27,
        23,
        144,
        86,
        91,
        96,
        64,
        128,
        81,
        96,
        1,
        96,
        1,
        96,
        248,
        27,
        3,
        25,
        146,
        131,
        22,
        96,
        32,
        130,
        1,
        82,
        96,
        192,
        151,
        144,
        151,
        27,
        96,
        1,
        96,
        1,
        96,
        192,
        27,
        3,
        25,
        22,
        96,
        33,
        136,
        1,
        82,
        96,
        248,
        147,
        144,
        147,
        27,
        22,
        96,
        41,
        134,
        1,
        82,
        96,
        128,
        27,
        96,
        1,
        96,
        1,
        96,
        128,
        27,
        3,
        25,
        22,
        96,
        42,
        133,
        1,
        82,
        128,
        81,
        96,
        26,
        129,
        134,
        3,
        1,
        129,
        82,
        96,
        58,
        144,
        148,
        1,
        144,
        82,
        80,
        144,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        130,
        96,
        1,
        96,
        1,
        96,
        128,
        27,
        3,
        22,
        96,
        0,
        3,
        97,
        3,
        94,
        87,
        80,
        96,
        0,
        146,
        131,
        146,
        80,
        144,
        80,
        86,
        91,
        80,
        129,
        91,
        97,
        3,
        108,
        96,
        10,
        130,
        97,
        7,
        100,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        128,
        27,
        3,
        22,
        96,
        0,
        3,
        97,
        3,
        153,
        87,
        97,
        3,
        133,
        130,
        97,
        7,
        138,
        86,
        91,
        145,
        80,
        97,
        3,
        146,
        96,
        10,
        130,
        97,
        7,
        183,
        86,
        91,
        144,
        80,
        97,
        3,
        97,
        86,
        91,
        145,
        80,
        145,
        86,
        91,
        128,
        53,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        129,
        20,
        97,
        3,
        181,
        87,
        96,
        0,
        128,
        253,
        91,
        145,
        144,
        80,
        86,
        91,
        128,
        53,
        97,
        255,
        255,
        129,
        22,
        129,
        20,
        97,
        3,
        181,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        53,
        96,
        1,
        96,
        1,
        96,
        128,
        27,
        3,
        129,
        22,
        129,
        20,
        97,
        3,
        181,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        0,
        128,
        96,
        0,
        128,
        96,
        0,
        128,
        96,
        0,
        128,
        96,
        0,
        97,
        1,
        32,
        138,
        140,
        3,
        18,
        21,
        97,
        4,
        2,
        87,
        96,
        0,
        128,
        253,
        91,
        137,
        53,
        98,
        255,
        255,
        255,
        129,
        22,
        129,
        20,
        97,
        4,
        21,
        87,
        96,
        0,
        128,
        253,
        91,
        152,
        80,
        97,
        4,
        35,
        96,
        32,
        139,
        1,
        97,
        3,
        158,
        86,
        91,
        151,
        80,
        97,
        4,
        49,
        96,
        64,
        139,
        1,
        97,
        3,
        186,
        86,
        91,
        150,
        80,
        97,
        4,
        63,
        96,
        96,
        139,
        1,
        97,
        3,
        186,
        86,
        91,
        149,
        80,
        97,
        4,
        77,
        96,
        128,
        139,
        1,
        97,
        3,
        186,
        86,
        91,
        148,
        80,
        97,
        4,
        91,
        96,
        160,
        139,
        1,
        97,
        3,
        186,
        86,
        91,
        147,
        80,
        97,
        4,
        105,
        96,
        192,
        139,
        1,
        97,
        3,
        186,
        86,
        91,
        146,
        80,
        97,
        4,
        119,
        96,
        224,
        139,
        1,
        97,
        3,
        204,
        86,
        91,
        145,
        80,
        97,
        4,
        134,
        97,
        1,
        0,
        139,
        1,
        97,
        3,
        204,
        86,
        91,
        144,
        80,
        146,
        149,
        152,
        80,
        146,
        149,
        152,
        80,
        146,
        149,
        152,
        86,
        91,
        96,
        0,
        96,
        32,
        128,
        131,
        82,
        131,
        81,
        128,
        130,
        133,
        1,
        82,
        96,
        0,
        91,
        129,
        129,
        16,
        21,
        97,
        4,
        194,
        87,
        133,
        129,
        1,
        131,
        1,
        81,
        133,
        130,
        1,
        96,
        64,
        1,
        82,
        130,
        1,
        97,
        4,
        166,
        86,
        91,
        129,
        129,
        17,
        21,
        97,
        4,
        212,
        87,
        96,
        0,
        96,
        64,
        131,
        135,
        1,
        1,
        82,
        91,
        80,
        96,
        31,
        1,
        96,
        31,
        25,
        22,
        146,
        144,
        146,
        1,
        96,
        64,
        1,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        128,
        53,
        96,
        255,
        129,
        22,
        129,
        20,
        97,
        3,
        181,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        53,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        22,
        129,
        20,
        97,
        3,
        181,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        0,
        128,
        96,
        0,
        128,
        96,
        0,
        96,
        160,
        134,
        136,
        3,
        18,
        21,
        97,
        5,
        43,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        5,
        52,
        134,
        97,
        4,
        234,
        86,
        91,
        148,
        80,
        97,
        5,
        66,
        96,
        32,
        135,
        1,
        97,
        4,
        251,
        86,
        91,
        147,
        80,
        97,
        5,
        80,
        96,
        64,
        135,
        1,
        97,
        3,
        204,
        86,
        91,
        146,
        80,
        97,
        5,
        94,
        96,
        96,
        135,
        1,
        97,
        3,
        204,
        86,
        91,
        145,
        80,
        97,
        5,
        108,
        96,
        128,
        135,
        1,
        97,
        4,
        234,
        86,
        91,
        144,
        80,
        146,
        149,
        80,
        146,
        149,
        144,
        147,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        128,
        96,
        128,
        133,
        135,
        3,
        18,
        21,
        97,
        5,
        142,
        87,
        96,
        0,
        128,
        253,
        91,
        132,
        53,
        128,
        21,
        21,
        129,
        20,
        97,
        5,
        158,
        87,
        96,
        0,
        128,
        253,
        91,
        147,
        80,
        97,
        5,
        172,
        96,
        32,
        134,
        1,
        97,
        4,
        234,
        86,
        91,
        146,
        80,
        97,
        5,
        186,
        96,
        64,
        134,
        1,
        97,
        4,
        251,
        86,
        91,
        145,
        80,
        97,
        5,
        200,
        96,
        96,
        134,
        1,
        97,
        3,
        204,
        86,
        91,
        144,
        80,
        146,
        149,
        145,
        148,
        80,
        146,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        5,
        230,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        5,
        239,
        131,
        97,
        3,
        158,
        86,
        91,
        145,
        80,
        97,
        5,
        253,
        96,
        32,
        132,
        1,
        97,
        3,
        158,
        86,
        91,
        144,
        80,
        146,
        80,
        146,
        144,
        80,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        248,
        27,
        3,
        25,
        142,
        22,
        129,
        82,
        96,
        232,
        141,
        144,
        27,
        96,
        1,
        96,
        1,
        96,
        232,
        27,
        3,
        25,
        22,
        96,
        1,
        130,
        1,
        82,
        96,
        96,
        140,
        144,
        27,
        107,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        25,
        22,
        96,
        4,
        130,
        1,
        82,
        97,
        6,
        89,
        96,
        24,
        130,
        1,
        140,
        96,
        240,
        27,
        96,
        1,
        96,
        1,
        96,
        240,
        27,
        3,
        25,
        22,
        144,
        82,
        86,
        91,
        97,
        6,
        114,
        96,
        26,
        130,
        1,
        139,
        96,
        240,
        27,
        96,
        1,
        96,
        1,
        96,
        240,
        27,
        3,
        25,
        22,
        144,
        82,
        86,
        91,
        97,
        6,
        139,
        96,
        28,
        130,
        1,
        138,
        96,
        240,
        27,
        96,
        1,
        96,
        1,
        96,
        240,
        27,
        3,
        25,
        22,
        144,
        82,
        86,
        91,
        97,
        6,
        164,
        96,
        30,
        130,
        1,
        137,
        96,
        240,
        27,
        96,
        1,
        96,
        1,
        96,
        240,
        27,
        3,
        25,
        22,
        144,
        82,
        86,
        91,
        97,
        6,
        189,
        96,
        32,
        130,
        1,
        136,
        96,
        240,
        27,
        96,
        1,
        96,
        1,
        96,
        240,
        27,
        3,
        25,
        22,
        144,
        82,
        86,
        91,
        97,
        6,
        214,
        96,
        34,
        130,
        1,
        135,
        96,
        248,
        27,
        96,
        1,
        96,
        1,
        96,
        248,
        27,
        3,
        25,
        22,
        144,
        82,
        86,
        91,
        97,
        6,
        239,
        96,
        35,
        130,
        1,
        134,
        96,
        248,
        27,
        96,
        1,
        96,
        1,
        96,
        248,
        27,
        3,
        25,
        22,
        144,
        82,
        86,
        91,
        97,
        7,
        8,
        96,
        36,
        130,
        1,
        133,
        96,
        128,
        27,
        96,
        1,
        96,
        1,
        96,
        128,
        27,
        3,
        25,
        22,
        144,
        82,
        86,
        91,
        97,
        7,
        33,
        96,
        52,
        130,
        1,
        132,
        96,
        248,
        27,
        96,
        1,
        96,
        1,
        96,
        248,
        27,
        3,
        25,
        22,
        144,
        82,
        86,
        91,
        97,
        7,
        58,
        96,
        53,
        130,
        1,
        131,
        96,
        128,
        27,
        96,
        1,
        96,
        1,
        96,
        128,
        27,
        3,
        25,
        22,
        144,
        82,
        86,
        91,
        96,
        69,
        1,
        157,
        156,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        18,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        0,
        96,
        1,
        96,
        1,
        96,
        128,
        27,
        3,
        128,
        132,
        22,
        128,
        97,
        7,
        126,
        87,
        97,
        7,
        126,
        97,
        7,
        78,
        86,
        91,
        146,
        22,
        145,
        144,
        145,
        6,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        0,
        96,
        255,
        130,
        22,
        96,
        255,
        129,
        3,
        97,
        7,
        174,
        87,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        17,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        1,
        1,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        0,
        96,
        1,
        96,
        1,
        96,
        128,
        27,
        3,
        128,
        132,
        22,
        128,
        97,
        7,
        209,
        87,
        97,
        7,
        209,
        97,
        7,
        78,
        86,
        91,
        146,
        22,
        145,
        144,
        145,
        4,
        146,
        145,
        80,
        80,
        86,
        254,
        162,
        100,
        105,
        112,
        102,
        115,
        88,
        34,
        18,
        32,
        179,
        222,
        207,
        166,
        3,
        148,
        44,
        226,
        176,
        249,
        156,
        216,
        111,
        157,
        173,
        18,
        229,
        171,
        145,
        38,
        228,
        19,
        117,
        201,
        105,
        159,
        181,
        200,
        125,
        232,
        106,
        243,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        8,
        13,
        0,
        51,
    ];
    ///The bytecode of the contract.
    pub static ENCODERTARGET_BYTECODE: ::ethers::core::types::Bytes =
        ::ethers::core::types::Bytes::from_static(__BYTECODE);
    #[rustfmt::skip]
    const __DEPLOYED_BYTECODE: &[u8] = &[
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        16,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        4,
        54,
        16,
        97,
        0,
        76,
        87,
        96,
        0,
        53,
        96,
        224,
        28,
        128,
        99,
        64,
        181,
        78,
        142,
        20,
        97,
        0,
        81,
        87,
        128,
        99,
        87,
        34,
        245,
        243,
        20,
        97,
        0,
        122,
        87,
        128,
        99,
        199,
        143,
        65,
        131,
        20,
        97,
        0,
        141,
        87,
        128,
        99,
        201,
        198,
        83,
        150,
        20,
        97,
        0,
        160,
        87,
        91,
        96,
        0,
        128,
        253,
        91,
        97,
        0,
        100,
        97,
        0,
        95,
        54,
        96,
        4,
        97,
        3,
        227,
        86,
        91,
        97,
        0,
        246,
        86,
        91,
        96,
        64,
        81,
        97,
        0,
        113,
        145,
        144,
        97,
        4,
        149,
        86,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        243,
        91,
        97,
        0,
        100,
        97,
        0,
        136,
        54,
        96,
        4,
        97,
        5,
        19,
        86,
        91,
        97,
        1,
        23,
        86,
        91,
        97,
        0,
        100,
        97,
        0,
        155,
        54,
        96,
        4,
        97,
        5,
        120,
        86,
        91,
        97,
        1,
        48,
        86,
        91,
        97,
        0,
        100,
        97,
        0,
        174,
        54,
        96,
        4,
        97,
        5,
        211,
        86,
        91,
        96,
        64,
        128,
        81,
        96,
        3,
        96,
        250,
        27,
        96,
        32,
        130,
        1,
        82,
        107,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        25,
        96,
        96,
        148,
        133,
        27,
        129,
        22,
        96,
        33,
        131,
        1,
        82,
        146,
        144,
        147,
        27,
        144,
        145,
        22,
        96,
        53,
        131,
        1,
        82,
        128,
        81,
        96,
        41,
        129,
        132,
        3,
        1,
        129,
        82,
        96,
        73,
        144,
        146,
        1,
        144,
        82,
        144,
        86,
        91,
        96,
        96,
        97,
        1,
        9,
        138,
        138,
        138,
        138,
        138,
        138,
        138,
        138,
        138,
        97,
        1,
        71,
        86,
        91,
        154,
        153,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        96,
        97,
        1,
        38,
        134,
        134,
        134,
        134,
        134,
        97,
        1,
        185,
        86,
        91,
        150,
        149,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        96,
        97,
        1,
        62,
        133,
        133,
        133,
        133,
        97,
        2,
        152,
        86,
        91,
        149,
        148,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        96,
        96,
        0,
        128,
        97,
        1,
        85,
        133,
        97,
        3,
        63,
        86,
        91,
        145,
        80,
        145,
        80,
        96,
        0,
        128,
        97,
        1,
        101,
        134,
        97,
        3,
        63,
        86,
        91,
        145,
        80,
        145,
        80,
        96,
        11,
        96,
        248,
        27,
        142,
        142,
        142,
        142,
        142,
        142,
        142,
        96,
        52,
        140,
        140,
        140,
        140,
        96,
        64,
        81,
        96,
        32,
        1,
        97,
        1,
        151,
        157,
        156,
        155,
        154,
        153,
        152,
        151,
        150,
        149,
        148,
        147,
        146,
        145,
        144,
        97,
        6,
        6,
        86,
        91,
        96,
        64,
        81,
        96,
        32,
        129,
        131,
        3,
        3,
        129,
        82,
        144,
        96,
        64,
        82,
        148,
        80,
        80,
        80,
        80,
        80,
        153,
        152,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        96,
        96,
        0,
        128,
        97,
        1,
        199,
        134,
        97,
        3,
        63,
        86,
        91,
        145,
        80,
        145,
        80,
        96,
        0,
        128,
        97,
        1,
        215,
        135,
        97,
        3,
        63,
        86,
        91,
        145,
        80,
        145,
        80,
        97,
        2,
        20,
        138,
        96,
        248,
        27,
        135,
        96,
        255,
        22,
        96,
        1,
        20,
        97,
        2,
        2,
        87,
        96,
        5,
        96,
        248,
        27,
        96,
        4,
        145,
        144,
        145,
        27,
        96,
        15,
        96,
        252,
        27,
        22,
        23,
        144,
        86,
        91,
        96,
        4,
        27,
        96,
        15,
        96,
        252,
        27,
        22,
        96,
        3,
        96,
        249,
        27,
        23,
        144,
        86,
        91,
        96,
        64,
        128,
        81,
        96,
        1,
        96,
        1,
        96,
        248,
        27,
        3,
        25,
        146,
        131,
        22,
        96,
        32,
        130,
        1,
        82,
        96,
        192,
        155,
        144,
        155,
        27,
        96,
        1,
        96,
        1,
        96,
        192,
        27,
        3,
        25,
        22,
        96,
        33,
        140,
        1,
        82,
        96,
        27,
        96,
        248,
        27,
        96,
        41,
        140,
        1,
        82,
        96,
        248,
        149,
        134,
        27,
        130,
        22,
        96,
        42,
        140,
        1,
        82,
        96,
        128,
        148,
        133,
        27,
        96,
        1,
        96,
        1,
        96,
        128,
        27,
        3,
        25,
        144,
        129,
        22,
        96,
        43,
        141,
        1,
        82,
        147,
        144,
        149,
        27,
        22,
        96,
        59,
        138,
        1,
        82,
        144,
        145,
        27,
        22,
        96,
        60,
        135,
        1,
        82,
        128,
        81,
        96,
        44,
        129,
        136,
        3,
        1,
        129,
        82,
        96,
        76,
        144,
        150,
        1,
        144,
        82,
        80,
        146,
        148,
        147,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        96,
        96,
        0,
        128,
        97,
        2,
        166,
        132,
        97,
        3,
        63,
        86,
        91,
        145,
        80,
        145,
        80,
        97,
        2,
        221,
        134,
        96,
        248,
        27,
        136,
        97,
        2,
        203,
        87,
        96,
        3,
        96,
        248,
        27,
        96,
        4,
        145,
        144,
        145,
        27,
        96,
        15,
        96,
        252,
        27,
        22,
        23,
        144,
        86,
        91,
        96,
        4,
        27,
        96,
        15,
        96,
        252,
        27,
        22,
        96,
        1,
        96,
        248,
        27,
        23,
        144,
        86,
        91,
        96,
        64,
        128,
        81,
        96,
        1,
        96,
        1,
        96,
        248,
        27,
        3,
        25,
        146,
        131,
        22,
        96,
        32,
        130,
        1,
        82,
        96,
        192,
        151,
        144,
        151,
        27,
        96,
        1,
        96,
        1,
        96,
        192,
        27,
        3,
        25,
        22,
        96,
        33,
        136,
        1,
        82,
        96,
        248,
        147,
        144,
        147,
        27,
        22,
        96,
        41,
        134,
        1,
        82,
        96,
        128,
        27,
        96,
        1,
        96,
        1,
        96,
        128,
        27,
        3,
        25,
        22,
        96,
        42,
        133,
        1,
        82,
        128,
        81,
        96,
        26,
        129,
        134,
        3,
        1,
        129,
        82,
        96,
        58,
        144,
        148,
        1,
        144,
        82,
        80,
        144,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        130,
        96,
        1,
        96,
        1,
        96,
        128,
        27,
        3,
        22,
        96,
        0,
        3,
        97,
        3,
        94,
        87,
        80,
        96,
        0,
        146,
        131,
        146,
        80,
        144,
        80,
        86,
        91,
        80,
        129,
        91,
        97,
        3,
        108,
        96,
        10,
        130,
        97,
        7,
        100,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        128,
        27,
        3,
        22,
        96,
        0,
        3,
        97,
        3,
        153,
        87,
        97,
        3,
        133,
        130,
        97,
        7,
        138,
        86,
        91,
        145,
        80,
        97,
        3,
        146,
        96,
        10,
        130,
        97,
        7,
        183,
        86,
        91,
        144,
        80,
        97,
        3,
        97,
        86,
        91,
        145,
        80,
        145,
        86,
        91,
        128,
        53,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        129,
        20,
        97,
        3,
        181,
        87,
        96,
        0,
        128,
        253,
        91,
        145,
        144,
        80,
        86,
        91,
        128,
        53,
        97,
        255,
        255,
        129,
        22,
        129,
        20,
        97,
        3,
        181,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        53,
        96,
        1,
        96,
        1,
        96,
        128,
        27,
        3,
        129,
        22,
        129,
        20,
        97,
        3,
        181,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        0,
        128,
        96,
        0,
        128,
        96,
        0,
        128,
        96,
        0,
        128,
        96,
        0,
        97,
        1,
        32,
        138,
        140,
        3,
        18,
        21,
        97,
        4,
        2,
        87,
        96,
        0,
        128,
        253,
        91,
        137,
        53,
        98,
        255,
        255,
        255,
        129,
        22,
        129,
        20,
        97,
        4,
        21,
        87,
        96,
        0,
        128,
        253,
        91,
        152,
        80,
        97,
        4,
        35,
        96,
        32,
        139,
        1,
        97,
        3,
        158,
        86,
        91,
        151,
        80,
        97,
        4,
        49,
        96,
        64,
        139,
        1,
        97,
        3,
        186,
        86,
        91,
        150,
        80,
        97,
        4,
        63,
        96,
        96,
        139,
        1,
        97,
        3,
        186,
        86,
        91,
        149,
        80,
        97,
        4,
        77,
        96,
        128,
        139,
        1,
        97,
        3,
        186,
        86,
        91,
        148,
        80,
        97,
        4,
        91,
        96,
        160,
        139,
        1,
        97,
        3,
        186,
        86,
        91,
        147,
        80,
        97,
        4,
        105,
        96,
        192,
        139,
        1,
        97,
        3,
        186,
        86,
        91,
        146,
        80,
        97,
        4,
        119,
        96,
        224,
        139,
        1,
        97,
        3,
        204,
        86,
        91,
        145,
        80,
        97,
        4,
        134,
        97,
        1,
        0,
        139,
        1,
        97,
        3,
        204,
        86,
        91,
        144,
        80,
        146,
        149,
        152,
        80,
        146,
        149,
        152,
        80,
        146,
        149,
        152,
        86,
        91,
        96,
        0,
        96,
        32,
        128,
        131,
        82,
        131,
        81,
        128,
        130,
        133,
        1,
        82,
        96,
        0,
        91,
        129,
        129,
        16,
        21,
        97,
        4,
        194,
        87,
        133,
        129,
        1,
        131,
        1,
        81,
        133,
        130,
        1,
        96,
        64,
        1,
        82,
        130,
        1,
        97,
        4,
        166,
        86,
        91,
        129,
        129,
        17,
        21,
        97,
        4,
        212,
        87,
        96,
        0,
        96,
        64,
        131,
        135,
        1,
        1,
        82,
        91,
        80,
        96,
        31,
        1,
        96,
        31,
        25,
        22,
        146,
        144,
        146,
        1,
        96,
        64,
        1,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        128,
        53,
        96,
        255,
        129,
        22,
        129,
        20,
        97,
        3,
        181,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        53,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        22,
        129,
        20,
        97,
        3,
        181,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        0,
        128,
        96,
        0,
        128,
        96,
        0,
        96,
        160,
        134,
        136,
        3,
        18,
        21,
        97,
        5,
        43,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        5,
        52,
        134,
        97,
        4,
        234,
        86,
        91,
        148,
        80,
        97,
        5,
        66,
        96,
        32,
        135,
        1,
        97,
        4,
        251,
        86,
        91,
        147,
        80,
        97,
        5,
        80,
        96,
        64,
        135,
        1,
        97,
        3,
        204,
        86,
        91,
        146,
        80,
        97,
        5,
        94,
        96,
        96,
        135,
        1,
        97,
        3,
        204,
        86,
        91,
        145,
        80,
        97,
        5,
        108,
        96,
        128,
        135,
        1,
        97,
        4,
        234,
        86,
        91,
        144,
        80,
        146,
        149,
        80,
        146,
        149,
        144,
        147,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        128,
        96,
        128,
        133,
        135,
        3,
        18,
        21,
        97,
        5,
        142,
        87,
        96,
        0,
        128,
        253,
        91,
        132,
        53,
        128,
        21,
        21,
        129,
        20,
        97,
        5,
        158,
        87,
        96,
        0,
        128,
        253,
        91,
        147,
        80,
        97,
        5,
        172,
        96,
        32,
        134,
        1,
        97,
        4,
        234,
        86,
        91,
        146,
        80,
        97,
        5,
        186,
        96,
        64,
        134,
        1,
        97,
        4,
        251,
        86,
        91,
        145,
        80,
        97,
        5,
        200,
        96,
        96,
        134,
        1,
        97,
        3,
        204,
        86,
        91,
        144,
        80,
        146,
        149,
        145,
        148,
        80,
        146,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        5,
        230,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        5,
        239,
        131,
        97,
        3,
        158,
        86,
        91,
        145,
        80,
        97,
        5,
        253,
        96,
        32,
        132,
        1,
        97,
        3,
        158,
        86,
        91,
        144,
        80,
        146,
        80,
        146,
        144,
        80,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        248,
        27,
        3,
        25,
        142,
        22,
        129,
        82,
        96,
        232,
        141,
        144,
        27,
        96,
        1,
        96,
        1,
        96,
        232,
        27,
        3,
        25,
        22,
        96,
        1,
        130,
        1,
        82,
        96,
        96,
        140,
        144,
        27,
        107,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        25,
        22,
        96,
        4,
        130,
        1,
        82,
        97,
        6,
        89,
        96,
        24,
        130,
        1,
        140,
        96,
        240,
        27,
        96,
        1,
        96,
        1,
        96,
        240,
        27,
        3,
        25,
        22,
        144,
        82,
        86,
        91,
        97,
        6,
        114,
        96,
        26,
        130,
        1,
        139,
        96,
        240,
        27,
        96,
        1,
        96,
        1,
        96,
        240,
        27,
        3,
        25,
        22,
        144,
        82,
        86,
        91,
        97,
        6,
        139,
        96,
        28,
        130,
        1,
        138,
        96,
        240,
        27,
        96,
        1,
        96,
        1,
        96,
        240,
        27,
        3,
        25,
        22,
        144,
        82,
        86,
        91,
        97,
        6,
        164,
        96,
        30,
        130,
        1,
        137,
        96,
        240,
        27,
        96,
        1,
        96,
        1,
        96,
        240,
        27,
        3,
        25,
        22,
        144,
        82,
        86,
        91,
        97,
        6,
        189,
        96,
        32,
        130,
        1,
        136,
        96,
        240,
        27,
        96,
        1,
        96,
        1,
        96,
        240,
        27,
        3,
        25,
        22,
        144,
        82,
        86,
        91,
        97,
        6,
        214,
        96,
        34,
        130,
        1,
        135,
        96,
        248,
        27,
        96,
        1,
        96,
        1,
        96,
        248,
        27,
        3,
        25,
        22,
        144,
        82,
        86,
        91,
        97,
        6,
        239,
        96,
        35,
        130,
        1,
        134,
        96,
        248,
        27,
        96,
        1,
        96,
        1,
        96,
        248,
        27,
        3,
        25,
        22,
        144,
        82,
        86,
        91,
        97,
        7,
        8,
        96,
        36,
        130,
        1,
        133,
        96,
        128,
        27,
        96,
        1,
        96,
        1,
        96,
        128,
        27,
        3,
        25,
        22,
        144,
        82,
        86,
        91,
        97,
        7,
        33,
        96,
        52,
        130,
        1,
        132,
        96,
        248,
        27,
        96,
        1,
        96,
        1,
        96,
        248,
        27,
        3,
        25,
        22,
        144,
        82,
        86,
        91,
        97,
        7,
        58,
        96,
        53,
        130,
        1,
        131,
        96,
        128,
        27,
        96,
        1,
        96,
        1,
        96,
        128,
        27,
        3,
        25,
        22,
        144,
        82,
        86,
        91,
        96,
        69,
        1,
        157,
        156,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        18,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        0,
        96,
        1,
        96,
        1,
        96,
        128,
        27,
        3,
        128,
        132,
        22,
        128,
        97,
        7,
        126,
        87,
        97,
        7,
        126,
        97,
        7,
        78,
        86,
        91,
        146,
        22,
        145,
        144,
        145,
        6,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        0,
        96,
        255,
        130,
        22,
        96,
        255,
        129,
        3,
        97,
        7,
        174,
        87,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        17,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        1,
        1,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        0,
        96,
        1,
        96,
        1,
        96,
        128,
        27,
        3,
        128,
        132,
        22,
        128,
        97,
        7,
        209,
        87,
        97,
        7,
        209,
        97,
        7,
        78,
        86,
        91,
        146,
        22,
        145,
        144,
        145,
        4,
        146,
        145,
        80,
        80,
        86,
        254,
        162,
        100,
        105,
        112,
        102,
        115,
        88,
        34,
        18,
        32,
        179,
        222,
        207,
        166,
        3,
        148,
        44,
        226,
        176,
        249,
        156,
        216,
        111,
        157,
        173,
        18,
        229,
        171,
        145,
        38,
        228,
        19,
        117,
        201,
        105,
        159,
        181,
        200,
        125,
        232,
        106,
        243,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        8,
        13,
        0,
        51,
    ];
    ///The deployed bytecode of the contract.
    pub static ENCODERTARGET_DEPLOYED_BYTECODE: ::ethers::core::types::Bytes =
        ::ethers::core::types::Bytes::from_static(__DEPLOYED_BYTECODE);
    pub struct EncoderTarget<M>(::ethers::contract::Contract<M>);
    impl<M> ::core::clone::Clone for EncoderTarget<M> {
        fn clone(&self) -> Self {
            Self(::core::clone::Clone::clone(&self.0))
        }
    }
    impl<M> ::core::ops::Deref for EncoderTarget<M> {
        type Target = ::ethers::contract::Contract<M>;
        fn deref(&self) -> &Self::Target {
            &self.0
        }
    }
    impl<M> ::core::ops::DerefMut for EncoderTarget<M> {
        fn deref_mut(&mut self) -> &mut Self::Target {
            &mut self.0
        }
    }
    impl<M> ::core::fmt::Debug for EncoderTarget<M> {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            f.debug_tuple(stringify!(EncoderTarget))
                .field(&self.address())
                .finish()
        }
    }
    impl<M: ::ethers::providers::Middleware> EncoderTarget<M> {
        /// Creates a new contract instance with the specified `ethers` client at
        /// `address`. The contract derefs to a `ethers::Contract` object.
        pub fn new<T: Into<::ethers::core::types::Address>>(
            address: T,
            client: ::std::sync::Arc<M>,
        ) -> Self {
            Self(::ethers::contract::Contract::new(
                address.into(),
                ENCODERTARGET_ABI.clone(),
                client,
            ))
        }
        /// Constructs the general purpose `Deployer` instance based on the provided constructor arguments and sends it.
        /// Returns a new instance of a deployer that returns an instance of this contract after sending the transaction
        ///
        /// Notes:
        /// - If there are no constructor arguments, you should pass `()` as the argument.
        /// - The default poll duration is 7 seconds.
        /// - The default number of confirmations is 1 block.
        ///
        ///
        /// # Example
        ///
        /// Generate contract bindings with `abigen!` and deploy a new contract instance.
        ///
        /// *Note*: this requires a `bytecode` and `abi` object in the `greeter.json` artifact.
        ///
        /// ```ignore
        /// # async fn deploy<M: ethers::providers::Middleware>(client: ::std::sync::Arc<M>) {
        ///     abigen!(Greeter, "../greeter.json");
        ///
        ///    let greeter_contract = Greeter::deploy(client, "Hello world!".to_string()).unwrap().send().await.unwrap();
        ///    let msg = greeter_contract.greet().call().await.unwrap();
        /// # }
        /// ```
        pub fn deploy<T: ::ethers::core::abi::Tokenize>(
            client: ::std::sync::Arc<M>,
            constructor_args: T,
        ) -> ::core::result::Result<
            ::ethers::contract::builders::ContractDeployer<M, Self>,
            ::ethers::contract::ContractError<M>,
        > {
            let factory = ::ethers::contract::ContractFactory::new(
                ENCODERTARGET_ABI.clone(),
                ENCODERTARGET_BYTECODE.clone().into(),
                client,
            );
            let deployer = factory.deploy(constructor_args)?;
            let deployer = ::ethers::contract::ContractDeployer::new(deployer);
            Ok(deployer)
        }
        ///Calls the contract's `allocateOrDeallocate` (0xc78f4183) function
        pub fn allocate_or_deallocate(
            &self,
            should_allocate: bool,
            use_max: u8,
            pool_id: u64,
            delta_liquidity: u128,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::Bytes> {
            self.0
                .method_hash(
                    [199, 143, 65, 131],
                    (should_allocate, use_max, pool_id, delta_liquidity),
                )
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `createPair` (0xc9c65396) function
        pub fn create_pair(
            &self,
            asset: ::ethers::core::types::Address,
            quote: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::Bytes> {
            self.0
                .method_hash([201, 198, 83, 150], (asset, quote))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `createPool` (0x40b54e8e) function
        pub fn create_pool(
            &self,
            pair_id: u32,
            controller: ::ethers::core::types::Address,
            priority_fee: u16,
            fee: u16,
            vol: u16,
            dur: u16,
            jit: u16,
            max_price: u128,
            price: u128,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::Bytes> {
            self.0
                .method_hash(
                    [64, 181, 78, 142],
                    (
                        pair_id,
                        controller,
                        priority_fee,
                        fee,
                        vol,
                        dur,
                        jit,
                        max_price,
                        price,
                    ),
                )
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `swap` (0x5722f5f3) function
        pub fn swap(
            &self,
            use_max: u8,
            pool_id: u64,
            amount_0: u128,
            amount_1: u128,
            sell_asset: u8,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::Bytes> {
            self.0
                .method_hash(
                    [87, 34, 245, 243],
                    (use_max, pool_id, amount_0, amount_1, sell_asset),
                )
                .expect("method not found (this should never happen)")
        }
    }
    impl<M: ::ethers::providers::Middleware> From<::ethers::contract::Contract<M>>
        for EncoderTarget<M>
    {
        fn from(contract: ::ethers::contract::Contract<M>) -> Self {
            Self::new(contract.address(), contract.client())
        }
    }
    ///Container type for all input parameters for the `allocateOrDeallocate` function with signature `allocateOrDeallocate(bool,uint8,uint64,uint128)` and selector `0xc78f4183`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethcall(
        name = "allocateOrDeallocate",
        abi = "allocateOrDeallocate(bool,uint8,uint64,uint128)"
    )]
    pub struct AllocateOrDeallocateCall {
        pub should_allocate: bool,
        pub use_max: u8,
        pub pool_id: u64,
        pub delta_liquidity: u128,
    }
    ///Container type for all input parameters for the `createPair` function with signature `createPair(address,address)` and selector `0xc9c65396`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethcall(name = "createPair", abi = "createPair(address,address)")]
    pub struct CreatePairCall {
        pub asset: ::ethers::core::types::Address,
        pub quote: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `createPool` function with signature `createPool(uint24,address,uint16,uint16,uint16,uint16,uint16,uint128,uint128)` and selector `0x40b54e8e`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethcall(
        name = "createPool",
        abi = "createPool(uint24,address,uint16,uint16,uint16,uint16,uint16,uint128,uint128)"
    )]
    pub struct CreatePoolCall {
        pub pair_id: u32,
        pub controller: ::ethers::core::types::Address,
        pub priority_fee: u16,
        pub fee: u16,
        pub vol: u16,
        pub dur: u16,
        pub jit: u16,
        pub max_price: u128,
        pub price: u128,
    }
    ///Container type for all input parameters for the `swap` function with signature `swap(uint8,uint64,uint128,uint128,uint8)` and selector `0x5722f5f3`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethcall(name = "swap", abi = "swap(uint8,uint64,uint128,uint128,uint8)")]
    pub struct SwapCall {
        pub use_max: u8,
        pub pool_id: u64,
        pub amount_0: u128,
        pub amount_1: u128,
        pub sell_asset: u8,
    }
    ///Container type for all of the contract's call
    #[derive(Clone, ::ethers::contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum EncoderTargetCalls {
        AllocateOrDeallocate(AllocateOrDeallocateCall),
        CreatePair(CreatePairCall),
        CreatePool(CreatePoolCall),
        Swap(SwapCall),
    }
    impl ::ethers::core::abi::AbiDecode for EncoderTargetCalls {
        fn decode(
            data: impl AsRef<[u8]>,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::AbiError> {
            let data = data.as_ref();
            if let Ok(decoded) =
                <AllocateOrDeallocateCall as ::ethers::core::abi::AbiDecode>::decode(data)
            {
                return Ok(Self::AllocateOrDeallocate(decoded));
            }
            if let Ok(decoded) = <CreatePairCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::CreatePair(decoded));
            }
            if let Ok(decoded) = <CreatePoolCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::CreatePool(decoded));
            }
            if let Ok(decoded) = <SwapCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Swap(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData.into())
        }
    }
    impl ::ethers::core::abi::AbiEncode for EncoderTargetCalls {
        fn encode(self) -> Vec<u8> {
            match self {
                Self::AllocateOrDeallocate(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::CreatePair(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::CreatePool(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::Swap(element) => ::ethers::core::abi::AbiEncode::encode(element),
            }
        }
    }
    impl ::core::fmt::Display for EncoderTargetCalls {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::AllocateOrDeallocate(element) => ::core::fmt::Display::fmt(element, f),
                Self::CreatePair(element) => ::core::fmt::Display::fmt(element, f),
                Self::CreatePool(element) => ::core::fmt::Display::fmt(element, f),
                Self::Swap(element) => ::core::fmt::Display::fmt(element, f),
            }
        }
    }
    impl ::core::convert::From<AllocateOrDeallocateCall> for EncoderTargetCalls {
        fn from(value: AllocateOrDeallocateCall) -> Self {
            Self::AllocateOrDeallocate(value)
        }
    }
    impl ::core::convert::From<CreatePairCall> for EncoderTargetCalls {
        fn from(value: CreatePairCall) -> Self {
            Self::CreatePair(value)
        }
    }
    impl ::core::convert::From<CreatePoolCall> for EncoderTargetCalls {
        fn from(value: CreatePoolCall) -> Self {
            Self::CreatePool(value)
        }
    }
    impl ::core::convert::From<SwapCall> for EncoderTargetCalls {
        fn from(value: SwapCall) -> Self {
            Self::Swap(value)
        }
    }
    ///Container type for all return fields from the `allocateOrDeallocate` function with signature `allocateOrDeallocate(bool,uint8,uint64,uint128)` and selector `0xc78f4183`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    pub struct AllocateOrDeallocateReturn {
        pub data: ::ethers::core::types::Bytes,
    }
    ///Container type for all return fields from the `createPair` function with signature `createPair(address,address)` and selector `0xc9c65396`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    pub struct CreatePairReturn(pub ::ethers::core::types::Bytes);
    ///Container type for all return fields from the `createPool` function with signature `createPool(uint24,address,uint16,uint16,uint16,uint16,uint16,uint128,uint128)` and selector `0x40b54e8e`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    pub struct CreatePoolReturn {
        pub data: ::ethers::core::types::Bytes,
    }
    ///Container type for all return fields from the `swap` function with signature `swap(uint8,uint64,uint128,uint128,uint8)` and selector `0x5722f5f3`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    pub struct SwapReturn {
        pub data: ::ethers::core::types::Bytes,
    }
}
