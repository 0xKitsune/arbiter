pub use writer::*;
/// This module was auto-generated with ethers-rs Abigen.
/// More information at: <https://github.com/gakonst/ethers-rs>
#[allow(
    clippy::enum_variant_names,
    clippy::too_many_arguments,
    clippy::upper_case_acronyms,
    clippy::type_complexity,
    dead_code,
    non_camel_case_types
)]
pub mod writer {
    #[rustfmt::skip]
    const __ABI: &str = "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"test_string\",\"type\":\"string\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"echoString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\",\"components\":[]}]}]";
    ///The parsed JSON ABI of the contract.
    pub static WRITER_ABI: ::ethers::contract::Lazy<::ethers::core::abi::Abi> =
        ::ethers::contract::Lazy::new(|| {
            ::ethers::core::utils::__serde_json::from_str(__ABI).expect("ABI is always valid")
        });
    #[rustfmt::skip]

    pub static WRITER_BYTECODE: ::ethers::contract::Lazy<::ethers::core::types::Bytes> =
    ::ethers::contract::Lazy::new(|| {
        "0x608060405234801561001057600080fd5b5061038e806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80630d7e2fce14610030575b600080fd5b61004361003e366004610110565b610059565b60405161005091906101c1565b60405180910390f35b606060006100678382610298565b50600080546100759061020f565b80601f01602080910402602001604051908101604052809291908181526020018280546100a19061020f565b80156100ee5780601f106100c3576101008083540402835291602001916100ee565b820191906000526020600020905b8154815290600101906020018083116100d157829003601f168201915b50505050509050919050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561012257600080fd5b813567ffffffffffffffff8082111561013a57600080fd5b818401915084601f83011261014e57600080fd5b813581811115610160576101606100fa565b604051601f8201601f19908116603f01168101908382118183101715610188576101886100fa565b816040528281528760208487010111156101a157600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208083528351808285015260005b818110156101ee578581018301518582016040015282016101d2565b506000604082860101526040601f19601f8301168501019250505092915050565b600181811c9082168061022357607f821691505b60208210810361024357634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561029357600081815260208120601f850160051c810160208610156102705750805b601f850160051c820191505b8181101561028f5782815560010161027c565b5050505b505050565b815167ffffffffffffffff8111156102b2576102b26100fa565b6102c6816102c0845461020f565b84610249565b602080601f8311600181146102fb57600084156102e35750858301515b600019600386901b1c1916600185901b17855561028f565b600085815260208120601f198616915b8281101561032a5788860151825594840194600190910190840161030b565b50858210156103485787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220c7f27c7bf88e3b6c98cf0b49c1114565fd9f48554f33966d4ef327bcb1902d0e64736f6c63430008110033"
        .parse()
        .expect("invalid bytecode")
    });
}
