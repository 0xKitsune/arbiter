pub use tick_math_test::*;
/// This module was auto-generated with ethers-rs Abigen.
/// More information at: <https://github.com/gakonst/ethers-rs>
#[allow(
    clippy::enum_variant_names,
    clippy::too_many_arguments,
    clippy::upper_case_acronyms,
    clippy::type_complexity,
    dead_code,
    non_camel_case_types
)]
pub mod tick_math_test {
    #[rustfmt::skip]
    const __ABI: &str = "[{\"inputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\",\"name\":\"MAX_SQRT_RATIO\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"\",\"type\":\"uint160\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\",\"name\":\"MIN_SQRT_RATIO\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"\",\"type\":\"uint160\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getGasCostOfGetSqrtRatioAtTick\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getGasCostOfGetTickAtSqrtRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\",\"components\":[]}],\"stateMutability\":\"pure\",\"type\":\"function\",\"name\":\"getSqrtRatioAtTick\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"\",\"type\":\"uint160\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\",\"components\":[]}],\"stateMutability\":\"pure\",\"type\":\"function\",\"name\":\"getTickAtSqrtRatio\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\",\"components\":[]}]}]";
    ///The parsed JSON ABI of the contract.
    pub static TICKMATHTEST_ABI: ::ethers::contract::Lazy<::ethers::core::abi::Abi> =
        ::ethers::contract::Lazy::new(|| {
            ::ethers::core::utils::__serde_json::from_str(__ABI).expect("ABI is always valid")
        });
    #[rustfmt::skip]
    const __BYTECODE: &[u8] = &[
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        16,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        8,
        61,
        128,
        97,
        0,
        32,
        96,
        0,
        57,
        96,
        0,
        243,
        254,
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        16,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        4,
        54,
        16,
        97,
        0,
        98,
        87,
        96,
        0,
        53,
        96,
        224,
        28,
        128,
        99,
        79,
        118,
        192,
        88,
        20,
        97,
        0,
        103,
        87,
        128,
        99,
        109,
        44,
        195,
        4,
        20,
        97,
        0,
        164,
        87,
        128,
        99,
        152,
        108,
        251,
        163,
        20,
        97,
        0,
        200,
        87,
        128,
        99,
        167,
        57,
        142,
        180,
        20,
        97,
        0,
        232,
        87,
        128,
        99,
        176,
        98,
        47,
        103,
        20,
        97,
        1,
        26,
        87,
        128,
        99,
        238,
        136,
        71,
        255,
        20,
        97,
        1,
        64,
        87,
        91,
        96,
        0,
        128,
        253,
        91,
        97,
        0,
        141,
        96,
        4,
        128,
        54,
        3,
        96,
        32,
        129,
        16,
        21,
        97,
        0,
        125,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        53,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        97,
        1,
        72,
        86,
        91,
        96,
        64,
        128,
        81,
        96,
        2,
        146,
        144,
        146,
        11,
        130,
        82,
        81,
        144,
        129,
        144,
        3,
        96,
        32,
        1,
        144,
        243,
        91,
        97,
        0,
        172,
        97,
        1,
        89,
        86,
        91,
        96,
        64,
        128,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        146,
        22,
        130,
        82,
        81,
        144,
        129,
        144,
        3,
        96,
        32,
        1,
        144,
        243,
        91,
        97,
        0,
        172,
        96,
        4,
        128,
        54,
        3,
        96,
        32,
        129,
        16,
        21,
        97,
        0,
        222,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        53,
        96,
        2,
        11,
        97,
        1,
        113,
        86,
        91,
        97,
        1,
        8,
        96,
        4,
        128,
        54,
        3,
        96,
        32,
        129,
        16,
        21,
        97,
        0,
        254,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        53,
        96,
        2,
        11,
        97,
        1,
        124,
        86,
        91,
        96,
        64,
        128,
        81,
        145,
        130,
        82,
        81,
        144,
        129,
        144,
        3,
        96,
        32,
        1,
        144,
        243,
        91,
        97,
        1,
        8,
        96,
        4,
        128,
        54,
        3,
        96,
        32,
        129,
        16,
        21,
        97,
        1,
        48,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        53,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        97,
        1,
        149,
        86,
        91,
        97,
        0,
        172,
        97,
        1,
        164,
        86,
        91,
        96,
        0,
        97,
        1,
        83,
        130,
        97,
        1,
        173,
        86,
        91,
        146,
        145,
        80,
        80,
        86,
        91,
        115,
        255,
        253,
        137,
        99,
        239,
        209,
        252,
        106,
        80,
        100,
        136,
        73,
        93,
        149,
        29,
        82,
        99,
        152,
        141,
        38,
        144,
        86,
        91,
        96,
        0,
        97,
        1,
        83,
        130,
        97,
        4,
        213,
        86,
        91,
        96,
        0,
        128,
        90,
        144,
        80,
        97,
        1,
        139,
        131,
        97,
        4,
        213,
        86,
        91,
        80,
        90,
        144,
        3,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        90,
        144,
        80,
        97,
        1,
        139,
        131,
        97,
        1,
        173,
        86,
        91,
        100,
        1,
        0,
        2,
        118,
        163,
        144,
        86,
        91,
        96,
        0,
        100,
        1,
        0,
        2,
        118,
        163,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        16,
        128,
        21,
        144,
        97,
        1,
        233,
        87,
        80,
        115,
        255,
        253,
        137,
        99,
        239,
        209,
        252,
        106,
        80,
        100,
        136,
        73,
        93,
        149,
        29,
        82,
        99,
        152,
        141,
        38,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        16,
        91,
        97,
        2,
        30,
        87,
        96,
        64,
        128,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        1,
        96,
        36,
        130,
        1,
        82,
        96,
        41,
        96,
        249,
        27,
        96,
        68,
        130,
        1,
        82,
        144,
        81,
        144,
        129,
        144,
        3,
        96,
        100,
        1,
        144,
        253,
        91,
        100,
        1,
        0,
        0,
        0,
        0,
        96,
        1,
        96,
        192,
        27,
        3,
        96,
        32,
        131,
        144,
        27,
        22,
        111,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        17,
        96,
        7,
        27,
        129,
        129,
        28,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        17,
        96,
        6,
        27,
        144,
        129,
        28,
        99,
        255,
        255,
        255,
        255,
        129,
        17,
        96,
        5,
        27,
        144,
        129,
        28,
        97,
        255,
        255,
        129,
        17,
        96,
        4,
        27,
        144,
        129,
        28,
        96,
        255,
        129,
        17,
        96,
        3,
        144,
        129,
        27,
        145,
        130,
        28,
        96,
        15,
        129,
        17,
        96,
        2,
        27,
        144,
        129,
        28,
        145,
        130,
        17,
        96,
        1,
        144,
        129,
        27,
        146,
        131,
        28,
        151,
        144,
        136,
        17,
        150,
        23,
        144,
        148,
        23,
        144,
        146,
        23,
        23,
        144,
        145,
        23,
        23,
        23,
        96,
        128,
        129,
        16,
        97,
        2,
        187,
        87,
        96,
        127,
        129,
        3,
        131,
        144,
        28,
        145,
        80,
        97,
        2,
        197,
        86,
        91,
        128,
        96,
        127,
        3,
        131,
        144,
        27,
        145,
        80,
        91,
        144,
        128,
        2,
        96,
        127,
        129,
        129,
        28,
        96,
        255,
        131,
        129,
        28,
        145,
        144,
        145,
        28,
        128,
        2,
        128,
        131,
        28,
        129,
        131,
        28,
        28,
        128,
        2,
        128,
        132,
        28,
        129,
        132,
        28,
        28,
        128,
        2,
        128,
        133,
        28,
        129,
        133,
        28,
        28,
        128,
        2,
        128,
        134,
        28,
        129,
        134,
        28,
        28,
        128,
        2,
        128,
        135,
        28,
        129,
        135,
        28,
        28,
        128,
        2,
        128,
        136,
        28,
        129,
        136,
        28,
        28,
        128,
        2,
        128,
        137,
        28,
        129,
        137,
        28,
        28,
        128,
        2,
        128,
        138,
        28,
        129,
        138,
        28,
        28,
        128,
        2,
        128,
        139,
        28,
        129,
        139,
        28,
        28,
        128,
        2,
        128,
        140,
        28,
        129,
        140,
        28,
        28,
        128,
        2,
        128,
        141,
        28,
        129,
        141,
        28,
        28,
        128,
        2,
        128,
        142,
        28,
        156,
        129,
        144,
        28,
        156,
        144,
        156,
        28,
        128,
        2,
        156,
        141,
        144,
        28,
        158,
        157,
        96,
        127,
        25,
        143,
        1,
        96,
        64,
        27,
        96,
        192,
        145,
        144,
        145,
        28,
        103,
        128,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        23,
        96,
        193,
        155,
        144,
        155,
        28,
        103,
        64,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        154,
        144,
        154,
        23,
        96,
        194,
        153,
        144,
        153,
        28,
        103,
        32,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        152,
        144,
        152,
        23,
        96,
        195,
        151,
        144,
        151,
        28,
        103,
        16,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        150,
        144,
        150,
        23,
        96,
        196,
        149,
        144,
        149,
        28,
        103,
        8,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        148,
        144,
        148,
        23,
        96,
        197,
        147,
        144,
        147,
        28,
        103,
        4,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        146,
        144,
        146,
        23,
        96,
        198,
        145,
        144,
        145,
        28,
        103,
        2,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        23,
        96,
        199,
        145,
        144,
        145,
        28,
        103,
        1,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        23,
        96,
        200,
        145,
        144,
        145,
        28,
        102,
        128,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        23,
        96,
        201,
        145,
        144,
        145,
        28,
        102,
        64,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        23,
        96,
        202,
        145,
        144,
        145,
        28,
        102,
        32,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        23,
        96,
        203,
        145,
        144,
        145,
        28,
        102,
        16,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        23,
        96,
        204,
        145,
        144,
        145,
        28,
        102,
        8,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        23,
        96,
        205,
        145,
        144,
        145,
        28,
        102,
        4,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        23,
        105,
        54,
        39,
        163,
        1,
        215,
        16,
        85,
        119,
        76,
        133,
        129,
        2,
        111,
        2,
        143,
        100,
        129,
        171,
        127,
        4,
        90,
        90,
        240,
        18,
        161,
        157,
        0,
        58,
        169,
        25,
        129,
        1,
        96,
        128,
        144,
        129,
        29,
        144,
        111,
        219,
        45,
        240,
        158,
        129,
        149,
        154,
        129,
        69,
        94,
        38,
        7,
        153,
        160,
        99,
        47,
        131,
        1,
        144,
        29,
        96,
        2,
        129,
        129,
        11,
        144,
        131,
        144,
        11,
        20,
        97,
        4,
        198,
        87,
        136,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        97,
        4,
        170,
        130,
        97,
        4,
        213,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        17,
        21,
        97,
        4,
        191,
        87,
        129,
        97,
        4,
        193,
        86,
        91,
        128,
        91,
        97,
        4,
        200,
        86,
        91,
        129,
        91,
        153,
        152,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        131,
        96,
        2,
        11,
        18,
        97,
        4,
        236,
        87,
        130,
        96,
        2,
        11,
        97,
        4,
        244,
        86,
        91,
        130,
        96,
        2,
        11,
        96,
        0,
        3,
        91,
        144,
        80,
        98,
        13,
        137,
        232,
        129,
        17,
        21,
        97,
        5,
        50,
        87,
        96,
        64,
        128,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        1,
        96,
        36,
        130,
        1,
        82,
        96,
        21,
        96,
        250,
        27,
        96,
        68,
        130,
        1,
        82,
        144,
        81,
        144,
        129,
        144,
        3,
        96,
        100,
        1,
        144,
        253,
        91,
        96,
        0,
        96,
        1,
        130,
        22,
        97,
        5,
        70,
        87,
        96,
        1,
        96,
        128,
        27,
        97,
        5,
        88,
        86,
        91,
        111,
        255,
        252,
        185,
        51,
        189,
        111,
        173,
        55,
        170,
        45,
        22,
        45,
        26,
        89,
        64,
        1,
        91,
        112,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        22,
        144,
        80,
        96,
        2,
        130,
        22,
        21,
        97,
        5,
        140,
        87,
        111,
        255,
        249,
        114,
        114,
        55,
        61,
        65,
        50,
        89,
        164,
        105,
        144,
        88,
        14,
        33,
        58,
        2,
        96,
        128,
        28,
        91,
        96,
        4,
        130,
        22,
        21,
        97,
        5,
        171,
        87,
        111,
        255,
        242,
        229,
        15,
        95,
        101,
        105,
        50,
        239,
        18,
        53,
        124,
        243,
        199,
        253,
        204,
        2,
        96,
        128,
        28,
        91,
        96,
        8,
        130,
        22,
        21,
        97,
        5,
        202,
        87,
        111,
        255,
        229,
        202,
        202,
        126,
        16,
        228,
        230,
        28,
        54,
        36,
        234,
        160,
        148,
        28,
        208,
        2,
        96,
        128,
        28,
        91,
        96,
        16,
        130,
        22,
        21,
        97,
        5,
        233,
        87,
        111,
        255,
        203,
        152,
        67,
        214,
        15,
        97,
        89,
        201,
        219,
        88,
        131,
        92,
        146,
        102,
        68,
        2,
        96,
        128,
        28,
        91,
        96,
        32,
        130,
        22,
        21,
        97,
        6,
        8,
        87,
        111,
        255,
        151,
        59,
        65,
        250,
        152,
        192,
        129,
        71,
        46,
        104,
        150,
        223,
        178,
        84,
        192,
        2,
        96,
        128,
        28,
        91,
        96,
        64,
        130,
        22,
        21,
        97,
        6,
        39,
        87,
        111,
        255,
        46,
        161,
        100,
        102,
        201,
        106,
        56,
        67,
        236,
        120,
        179,
        38,
        181,
        40,
        97,
        2,
        96,
        128,
        28,
        91,
        96,
        128,
        130,
        22,
        21,
        97,
        6,
        70,
        87,
        111,
        254,
        93,
        238,
        4,
        106,
        153,
        162,
        168,
        17,
        196,
        97,
        241,
        150,
        156,
        48,
        83,
        2,
        96,
        128,
        28,
        91,
        97,
        1,
        0,
        130,
        22,
        21,
        97,
        6,
        102,
        87,
        111,
        252,
        190,
        134,
        199,
        144,
        10,
        136,
        174,
        220,
        255,
        200,
        59,
        71,
        154,
        163,
        164,
        2,
        96,
        128,
        28,
        91,
        97,
        2,
        0,
        130,
        22,
        21,
        97,
        6,
        134,
        87,
        111,
        249,
        135,
        167,
        37,
        58,
        196,
        19,
        23,
        111,
        43,
        7,
        76,
        247,
        129,
        94,
        84,
        2,
        96,
        128,
        28,
        91,
        97,
        4,
        0,
        130,
        22,
        21,
        97,
        6,
        166,
        87,
        111,
        243,
        57,
        43,
        8,
        34,
        183,
        0,
        5,
        148,
        12,
        122,
        57,
        142,
        75,
        112,
        243,
        2,
        96,
        128,
        28,
        91,
        97,
        8,
        0,
        130,
        22,
        21,
        97,
        6,
        198,
        87,
        111,
        231,
        21,
        148,
        117,
        162,
        194,
        155,
        116,
        67,
        178,
        156,
        127,
        166,
        232,
        137,
        217,
        2,
        96,
        128,
        28,
        91,
        97,
        16,
        0,
        130,
        22,
        21,
        97,
        6,
        230,
        87,
        111,
        208,
        151,
        243,
        189,
        253,
        32,
        34,
        184,
        132,
        90,
        216,
        247,
        146,
        170,
        88,
        37,
        2,
        96,
        128,
        28,
        91,
        97,
        32,
        0,
        130,
        22,
        21,
        97,
        7,
        6,
        87,
        111,
        169,
        247,
        70,
        70,
        45,
        135,
        15,
        223,
        138,
        101,
        220,
        31,
        144,
        224,
        97,
        229,
        2,
        96,
        128,
        28,
        91,
        97,
        64,
        0,
        130,
        22,
        21,
        97,
        7,
        38,
        87,
        111,
        112,
        216,
        105,
        161,
        86,
        210,
        161,
        184,
        144,
        187,
        61,
        246,
        43,
        175,
        50,
        247,
        2,
        96,
        128,
        28,
        91,
        97,
        128,
        0,
        130,
        22,
        21,
        97,
        7,
        70,
        87,
        111,
        49,
        190,
        19,
        95,
        151,
        208,
        143,
        217,
        129,
        35,
        21,
        5,
        84,
        47,
        207,
        166,
        2,
        96,
        128,
        28,
        91,
        98,
        1,
        0,
        0,
        130,
        22,
        21,
        97,
        7,
        103,
        87,
        111,
        9,
        170,
        80,
        139,
        91,
        122,
        132,
        225,
        198,
        119,
        222,
        84,
        243,
        233,
        155,
        201,
        2,
        96,
        128,
        28,
        91,
        98,
        2,
        0,
        0,
        130,
        22,
        21,
        97,
        7,
        135,
        87,
        110,
        93,
        106,
        248,
        222,
        219,
        129,
        25,
        102,
        153,
        195,
        41,
        34,
        94,
        230,
        4,
        2,
        96,
        128,
        28,
        91,
        98,
        4,
        0,
        0,
        130,
        22,
        21,
        97,
        7,
        166,
        87,
        109,
        34,
        22,
        229,
        132,
        245,
        250,
        30,
        169,
        38,
        4,
        27,
        237,
        254,
        152,
        2,
        96,
        128,
        28,
        91,
        98,
        8,
        0,
        0,
        130,
        22,
        21,
        97,
        7,
        195,
        87,
        107,
        4,
        138,
        23,
        3,
        145,
        247,
        220,
        66,
        68,
        78,
        143,
        162,
        2,
        96,
        128,
        28,
        91,
        96,
        0,
        132,
        96,
        2,
        11,
        19,
        21,
        97,
        7,
        222,
        87,
        128,
        96,
        0,
        25,
        129,
        97,
        7,
        218,
        87,
        254,
        91,
        4,
        144,
        80,
        91,
        100,
        1,
        0,
        0,
        0,
        0,
        129,
        6,
        21,
        97,
        7,
        242,
        87,
        96,
        1,
        97,
        7,
        245,
        86,
        91,
        96,
        0,
        91,
        96,
        255,
        22,
        96,
        32,
        130,
        144,
        28,
        1,
        146,
        80,
        80,
        80,
        145,
        144,
        80,
        86,
        254,
        162,
        100,
        105,
        112,
        102,
        115,
        88,
        34,
        18,
        32,
        98,
        177,
        54,
        228,
        78,
        238,
        204,
        142,
        97,
        216,
        93,
        44,
        82,
        60,
        74,
        22,
        208,
        172,
        33,
        240,
        126,
        236,
        104,
        97,
        225,
        154,
        118,
        75,
        100,
        45,
        222,
        192,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        7,
        6,
        0,
        51,
    ];
    ///The bytecode of the contract.
    pub static TICKMATHTEST_BYTECODE: ::ethers::core::types::Bytes =
        ::ethers::core::types::Bytes::from_static(__BYTECODE);
    #[rustfmt::skip]
    const __DEPLOYED_BYTECODE: &[u8] = &[
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        16,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        4,
        54,
        16,
        97,
        0,
        98,
        87,
        96,
        0,
        53,
        96,
        224,
        28,
        128,
        99,
        79,
        118,
        192,
        88,
        20,
        97,
        0,
        103,
        87,
        128,
        99,
        109,
        44,
        195,
        4,
        20,
        97,
        0,
        164,
        87,
        128,
        99,
        152,
        108,
        251,
        163,
        20,
        97,
        0,
        200,
        87,
        128,
        99,
        167,
        57,
        142,
        180,
        20,
        97,
        0,
        232,
        87,
        128,
        99,
        176,
        98,
        47,
        103,
        20,
        97,
        1,
        26,
        87,
        128,
        99,
        238,
        136,
        71,
        255,
        20,
        97,
        1,
        64,
        87,
        91,
        96,
        0,
        128,
        253,
        91,
        97,
        0,
        141,
        96,
        4,
        128,
        54,
        3,
        96,
        32,
        129,
        16,
        21,
        97,
        0,
        125,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        53,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        97,
        1,
        72,
        86,
        91,
        96,
        64,
        128,
        81,
        96,
        2,
        146,
        144,
        146,
        11,
        130,
        82,
        81,
        144,
        129,
        144,
        3,
        96,
        32,
        1,
        144,
        243,
        91,
        97,
        0,
        172,
        97,
        1,
        89,
        86,
        91,
        96,
        64,
        128,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        146,
        22,
        130,
        82,
        81,
        144,
        129,
        144,
        3,
        96,
        32,
        1,
        144,
        243,
        91,
        97,
        0,
        172,
        96,
        4,
        128,
        54,
        3,
        96,
        32,
        129,
        16,
        21,
        97,
        0,
        222,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        53,
        96,
        2,
        11,
        97,
        1,
        113,
        86,
        91,
        97,
        1,
        8,
        96,
        4,
        128,
        54,
        3,
        96,
        32,
        129,
        16,
        21,
        97,
        0,
        254,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        53,
        96,
        2,
        11,
        97,
        1,
        124,
        86,
        91,
        96,
        64,
        128,
        81,
        145,
        130,
        82,
        81,
        144,
        129,
        144,
        3,
        96,
        32,
        1,
        144,
        243,
        91,
        97,
        1,
        8,
        96,
        4,
        128,
        54,
        3,
        96,
        32,
        129,
        16,
        21,
        97,
        1,
        48,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        53,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        97,
        1,
        149,
        86,
        91,
        97,
        0,
        172,
        97,
        1,
        164,
        86,
        91,
        96,
        0,
        97,
        1,
        83,
        130,
        97,
        1,
        173,
        86,
        91,
        146,
        145,
        80,
        80,
        86,
        91,
        115,
        255,
        253,
        137,
        99,
        239,
        209,
        252,
        106,
        80,
        100,
        136,
        73,
        93,
        149,
        29,
        82,
        99,
        152,
        141,
        38,
        144,
        86,
        91,
        96,
        0,
        97,
        1,
        83,
        130,
        97,
        4,
        213,
        86,
        91,
        96,
        0,
        128,
        90,
        144,
        80,
        97,
        1,
        139,
        131,
        97,
        4,
        213,
        86,
        91,
        80,
        90,
        144,
        3,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        90,
        144,
        80,
        97,
        1,
        139,
        131,
        97,
        1,
        173,
        86,
        91,
        100,
        1,
        0,
        2,
        118,
        163,
        144,
        86,
        91,
        96,
        0,
        100,
        1,
        0,
        2,
        118,
        163,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        16,
        128,
        21,
        144,
        97,
        1,
        233,
        87,
        80,
        115,
        255,
        253,
        137,
        99,
        239,
        209,
        252,
        106,
        80,
        100,
        136,
        73,
        93,
        149,
        29,
        82,
        99,
        152,
        141,
        38,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        16,
        91,
        97,
        2,
        30,
        87,
        96,
        64,
        128,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        1,
        96,
        36,
        130,
        1,
        82,
        96,
        41,
        96,
        249,
        27,
        96,
        68,
        130,
        1,
        82,
        144,
        81,
        144,
        129,
        144,
        3,
        96,
        100,
        1,
        144,
        253,
        91,
        100,
        1,
        0,
        0,
        0,
        0,
        96,
        1,
        96,
        192,
        27,
        3,
        96,
        32,
        131,
        144,
        27,
        22,
        111,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        17,
        96,
        7,
        27,
        129,
        129,
        28,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        17,
        96,
        6,
        27,
        144,
        129,
        28,
        99,
        255,
        255,
        255,
        255,
        129,
        17,
        96,
        5,
        27,
        144,
        129,
        28,
        97,
        255,
        255,
        129,
        17,
        96,
        4,
        27,
        144,
        129,
        28,
        96,
        255,
        129,
        17,
        96,
        3,
        144,
        129,
        27,
        145,
        130,
        28,
        96,
        15,
        129,
        17,
        96,
        2,
        27,
        144,
        129,
        28,
        145,
        130,
        17,
        96,
        1,
        144,
        129,
        27,
        146,
        131,
        28,
        151,
        144,
        136,
        17,
        150,
        23,
        144,
        148,
        23,
        144,
        146,
        23,
        23,
        144,
        145,
        23,
        23,
        23,
        96,
        128,
        129,
        16,
        97,
        2,
        187,
        87,
        96,
        127,
        129,
        3,
        131,
        144,
        28,
        145,
        80,
        97,
        2,
        197,
        86,
        91,
        128,
        96,
        127,
        3,
        131,
        144,
        27,
        145,
        80,
        91,
        144,
        128,
        2,
        96,
        127,
        129,
        129,
        28,
        96,
        255,
        131,
        129,
        28,
        145,
        144,
        145,
        28,
        128,
        2,
        128,
        131,
        28,
        129,
        131,
        28,
        28,
        128,
        2,
        128,
        132,
        28,
        129,
        132,
        28,
        28,
        128,
        2,
        128,
        133,
        28,
        129,
        133,
        28,
        28,
        128,
        2,
        128,
        134,
        28,
        129,
        134,
        28,
        28,
        128,
        2,
        128,
        135,
        28,
        129,
        135,
        28,
        28,
        128,
        2,
        128,
        136,
        28,
        129,
        136,
        28,
        28,
        128,
        2,
        128,
        137,
        28,
        129,
        137,
        28,
        28,
        128,
        2,
        128,
        138,
        28,
        129,
        138,
        28,
        28,
        128,
        2,
        128,
        139,
        28,
        129,
        139,
        28,
        28,
        128,
        2,
        128,
        140,
        28,
        129,
        140,
        28,
        28,
        128,
        2,
        128,
        141,
        28,
        129,
        141,
        28,
        28,
        128,
        2,
        128,
        142,
        28,
        156,
        129,
        144,
        28,
        156,
        144,
        156,
        28,
        128,
        2,
        156,
        141,
        144,
        28,
        158,
        157,
        96,
        127,
        25,
        143,
        1,
        96,
        64,
        27,
        96,
        192,
        145,
        144,
        145,
        28,
        103,
        128,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        23,
        96,
        193,
        155,
        144,
        155,
        28,
        103,
        64,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        154,
        144,
        154,
        23,
        96,
        194,
        153,
        144,
        153,
        28,
        103,
        32,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        152,
        144,
        152,
        23,
        96,
        195,
        151,
        144,
        151,
        28,
        103,
        16,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        150,
        144,
        150,
        23,
        96,
        196,
        149,
        144,
        149,
        28,
        103,
        8,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        148,
        144,
        148,
        23,
        96,
        197,
        147,
        144,
        147,
        28,
        103,
        4,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        146,
        144,
        146,
        23,
        96,
        198,
        145,
        144,
        145,
        28,
        103,
        2,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        23,
        96,
        199,
        145,
        144,
        145,
        28,
        103,
        1,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        23,
        96,
        200,
        145,
        144,
        145,
        28,
        102,
        128,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        23,
        96,
        201,
        145,
        144,
        145,
        28,
        102,
        64,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        23,
        96,
        202,
        145,
        144,
        145,
        28,
        102,
        32,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        23,
        96,
        203,
        145,
        144,
        145,
        28,
        102,
        16,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        23,
        96,
        204,
        145,
        144,
        145,
        28,
        102,
        8,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        23,
        96,
        205,
        145,
        144,
        145,
        28,
        102,
        4,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        23,
        105,
        54,
        39,
        163,
        1,
        215,
        16,
        85,
        119,
        76,
        133,
        129,
        2,
        111,
        2,
        143,
        100,
        129,
        171,
        127,
        4,
        90,
        90,
        240,
        18,
        161,
        157,
        0,
        58,
        169,
        25,
        129,
        1,
        96,
        128,
        144,
        129,
        29,
        144,
        111,
        219,
        45,
        240,
        158,
        129,
        149,
        154,
        129,
        69,
        94,
        38,
        7,
        153,
        160,
        99,
        47,
        131,
        1,
        144,
        29,
        96,
        2,
        129,
        129,
        11,
        144,
        131,
        144,
        11,
        20,
        97,
        4,
        198,
        87,
        136,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        97,
        4,
        170,
        130,
        97,
        4,
        213,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        17,
        21,
        97,
        4,
        191,
        87,
        129,
        97,
        4,
        193,
        86,
        91,
        128,
        91,
        97,
        4,
        200,
        86,
        91,
        129,
        91,
        153,
        152,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        131,
        96,
        2,
        11,
        18,
        97,
        4,
        236,
        87,
        130,
        96,
        2,
        11,
        97,
        4,
        244,
        86,
        91,
        130,
        96,
        2,
        11,
        96,
        0,
        3,
        91,
        144,
        80,
        98,
        13,
        137,
        232,
        129,
        17,
        21,
        97,
        5,
        50,
        87,
        96,
        64,
        128,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        1,
        96,
        36,
        130,
        1,
        82,
        96,
        21,
        96,
        250,
        27,
        96,
        68,
        130,
        1,
        82,
        144,
        81,
        144,
        129,
        144,
        3,
        96,
        100,
        1,
        144,
        253,
        91,
        96,
        0,
        96,
        1,
        130,
        22,
        97,
        5,
        70,
        87,
        96,
        1,
        96,
        128,
        27,
        97,
        5,
        88,
        86,
        91,
        111,
        255,
        252,
        185,
        51,
        189,
        111,
        173,
        55,
        170,
        45,
        22,
        45,
        26,
        89,
        64,
        1,
        91,
        112,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        22,
        144,
        80,
        96,
        2,
        130,
        22,
        21,
        97,
        5,
        140,
        87,
        111,
        255,
        249,
        114,
        114,
        55,
        61,
        65,
        50,
        89,
        164,
        105,
        144,
        88,
        14,
        33,
        58,
        2,
        96,
        128,
        28,
        91,
        96,
        4,
        130,
        22,
        21,
        97,
        5,
        171,
        87,
        111,
        255,
        242,
        229,
        15,
        95,
        101,
        105,
        50,
        239,
        18,
        53,
        124,
        243,
        199,
        253,
        204,
        2,
        96,
        128,
        28,
        91,
        96,
        8,
        130,
        22,
        21,
        97,
        5,
        202,
        87,
        111,
        255,
        229,
        202,
        202,
        126,
        16,
        228,
        230,
        28,
        54,
        36,
        234,
        160,
        148,
        28,
        208,
        2,
        96,
        128,
        28,
        91,
        96,
        16,
        130,
        22,
        21,
        97,
        5,
        233,
        87,
        111,
        255,
        203,
        152,
        67,
        214,
        15,
        97,
        89,
        201,
        219,
        88,
        131,
        92,
        146,
        102,
        68,
        2,
        96,
        128,
        28,
        91,
        96,
        32,
        130,
        22,
        21,
        97,
        6,
        8,
        87,
        111,
        255,
        151,
        59,
        65,
        250,
        152,
        192,
        129,
        71,
        46,
        104,
        150,
        223,
        178,
        84,
        192,
        2,
        96,
        128,
        28,
        91,
        96,
        64,
        130,
        22,
        21,
        97,
        6,
        39,
        87,
        111,
        255,
        46,
        161,
        100,
        102,
        201,
        106,
        56,
        67,
        236,
        120,
        179,
        38,
        181,
        40,
        97,
        2,
        96,
        128,
        28,
        91,
        96,
        128,
        130,
        22,
        21,
        97,
        6,
        70,
        87,
        111,
        254,
        93,
        238,
        4,
        106,
        153,
        162,
        168,
        17,
        196,
        97,
        241,
        150,
        156,
        48,
        83,
        2,
        96,
        128,
        28,
        91,
        97,
        1,
        0,
        130,
        22,
        21,
        97,
        6,
        102,
        87,
        111,
        252,
        190,
        134,
        199,
        144,
        10,
        136,
        174,
        220,
        255,
        200,
        59,
        71,
        154,
        163,
        164,
        2,
        96,
        128,
        28,
        91,
        97,
        2,
        0,
        130,
        22,
        21,
        97,
        6,
        134,
        87,
        111,
        249,
        135,
        167,
        37,
        58,
        196,
        19,
        23,
        111,
        43,
        7,
        76,
        247,
        129,
        94,
        84,
        2,
        96,
        128,
        28,
        91,
        97,
        4,
        0,
        130,
        22,
        21,
        97,
        6,
        166,
        87,
        111,
        243,
        57,
        43,
        8,
        34,
        183,
        0,
        5,
        148,
        12,
        122,
        57,
        142,
        75,
        112,
        243,
        2,
        96,
        128,
        28,
        91,
        97,
        8,
        0,
        130,
        22,
        21,
        97,
        6,
        198,
        87,
        111,
        231,
        21,
        148,
        117,
        162,
        194,
        155,
        116,
        67,
        178,
        156,
        127,
        166,
        232,
        137,
        217,
        2,
        96,
        128,
        28,
        91,
        97,
        16,
        0,
        130,
        22,
        21,
        97,
        6,
        230,
        87,
        111,
        208,
        151,
        243,
        189,
        253,
        32,
        34,
        184,
        132,
        90,
        216,
        247,
        146,
        170,
        88,
        37,
        2,
        96,
        128,
        28,
        91,
        97,
        32,
        0,
        130,
        22,
        21,
        97,
        7,
        6,
        87,
        111,
        169,
        247,
        70,
        70,
        45,
        135,
        15,
        223,
        138,
        101,
        220,
        31,
        144,
        224,
        97,
        229,
        2,
        96,
        128,
        28,
        91,
        97,
        64,
        0,
        130,
        22,
        21,
        97,
        7,
        38,
        87,
        111,
        112,
        216,
        105,
        161,
        86,
        210,
        161,
        184,
        144,
        187,
        61,
        246,
        43,
        175,
        50,
        247,
        2,
        96,
        128,
        28,
        91,
        97,
        128,
        0,
        130,
        22,
        21,
        97,
        7,
        70,
        87,
        111,
        49,
        190,
        19,
        95,
        151,
        208,
        143,
        217,
        129,
        35,
        21,
        5,
        84,
        47,
        207,
        166,
        2,
        96,
        128,
        28,
        91,
        98,
        1,
        0,
        0,
        130,
        22,
        21,
        97,
        7,
        103,
        87,
        111,
        9,
        170,
        80,
        139,
        91,
        122,
        132,
        225,
        198,
        119,
        222,
        84,
        243,
        233,
        155,
        201,
        2,
        96,
        128,
        28,
        91,
        98,
        2,
        0,
        0,
        130,
        22,
        21,
        97,
        7,
        135,
        87,
        110,
        93,
        106,
        248,
        222,
        219,
        129,
        25,
        102,
        153,
        195,
        41,
        34,
        94,
        230,
        4,
        2,
        96,
        128,
        28,
        91,
        98,
        4,
        0,
        0,
        130,
        22,
        21,
        97,
        7,
        166,
        87,
        109,
        34,
        22,
        229,
        132,
        245,
        250,
        30,
        169,
        38,
        4,
        27,
        237,
        254,
        152,
        2,
        96,
        128,
        28,
        91,
        98,
        8,
        0,
        0,
        130,
        22,
        21,
        97,
        7,
        195,
        87,
        107,
        4,
        138,
        23,
        3,
        145,
        247,
        220,
        66,
        68,
        78,
        143,
        162,
        2,
        96,
        128,
        28,
        91,
        96,
        0,
        132,
        96,
        2,
        11,
        19,
        21,
        97,
        7,
        222,
        87,
        128,
        96,
        0,
        25,
        129,
        97,
        7,
        218,
        87,
        254,
        91,
        4,
        144,
        80,
        91,
        100,
        1,
        0,
        0,
        0,
        0,
        129,
        6,
        21,
        97,
        7,
        242,
        87,
        96,
        1,
        97,
        7,
        245,
        86,
        91,
        96,
        0,
        91,
        96,
        255,
        22,
        96,
        32,
        130,
        144,
        28,
        1,
        146,
        80,
        80,
        80,
        145,
        144,
        80,
        86,
        254,
        162,
        100,
        105,
        112,
        102,
        115,
        88,
        34,
        18,
        32,
        98,
        177,
        54,
        228,
        78,
        238,
        204,
        142,
        97,
        216,
        93,
        44,
        82,
        60,
        74,
        22,
        208,
        172,
        33,
        240,
        126,
        236,
        104,
        97,
        225,
        154,
        118,
        75,
        100,
        45,
        222,
        192,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        7,
        6,
        0,
        51,
    ];
    ///The deployed bytecode of the contract.
    pub static TICKMATHTEST_DEPLOYED_BYTECODE: ::ethers::core::types::Bytes =
        ::ethers::core::types::Bytes::from_static(__DEPLOYED_BYTECODE);
    pub struct TickMathTest<M>(::ethers::contract::Contract<M>);
    impl<M> ::core::clone::Clone for TickMathTest<M> {
        fn clone(&self) -> Self {
            Self(::core::clone::Clone::clone(&self.0))
        }
    }
    impl<M> ::core::ops::Deref for TickMathTest<M> {
        type Target = ::ethers::contract::Contract<M>;
        fn deref(&self) -> &Self::Target {
            &self.0
        }
    }
    impl<M> ::core::ops::DerefMut for TickMathTest<M> {
        fn deref_mut(&mut self) -> &mut Self::Target {
            &mut self.0
        }
    }
    impl<M> ::core::fmt::Debug for TickMathTest<M> {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            f.debug_tuple(stringify!(TickMathTest))
                .field(&self.address())
                .finish()
        }
    }
    impl<M: ::ethers::providers::Middleware> TickMathTest<M> {
        /// Creates a new contract instance with the specified `ethers` client at
        /// `address`. The contract derefs to a `ethers::Contract` object.
        pub fn new<T: Into<::ethers::core::types::Address>>(
            address: T,
            client: ::std::sync::Arc<M>,
        ) -> Self {
            Self(::ethers::contract::Contract::new(
                address.into(),
                TICKMATHTEST_ABI.clone(),
                client,
            ))
        }
        /// Constructs the general purpose `Deployer` instance based on the provided constructor arguments and sends it.
        /// Returns a new instance of a deployer that returns an instance of this contract after sending the transaction
        ///
        /// Notes:
        /// - If there are no constructor arguments, you should pass `()` as the argument.
        /// - The default poll duration is 7 seconds.
        /// - The default number of confirmations is 1 block.
        ///
        ///
        /// # Example
        ///
        /// Generate contract bindings with `abigen!` and deploy a new contract instance.
        ///
        /// *Note*: this requires a `bytecode` and `abi` object in the `greeter.json` artifact.
        ///
        /// ```ignore
        /// # async fn deploy<M: ethers::providers::Middleware>(client: ::std::sync::Arc<M>) {
        ///     abigen!(Greeter, "../greeter.json");
        ///
        ///    let greeter_contract = Greeter::deploy(client, "Hello world!".to_string()).unwrap().send().await.unwrap();
        ///    let msg = greeter_contract.greet().call().await.unwrap();
        /// # }
        /// ```
        pub fn deploy<T: ::ethers::core::abi::Tokenize>(
            client: ::std::sync::Arc<M>,
            constructor_args: T,
        ) -> ::core::result::Result<
            ::ethers::contract::builders::ContractDeployer<M, Self>,
            ::ethers::contract::ContractError<M>,
        > {
            let factory = ::ethers::contract::ContractFactory::new(
                TICKMATHTEST_ABI.clone(),
                TICKMATHTEST_BYTECODE.clone().into(),
                client,
            );
            let deployer = factory.deploy(constructor_args)?;
            let deployer = ::ethers::contract::ContractDeployer::new(deployer);
            Ok(deployer)
        }
        ///Calls the contract's `MAX_SQRT_RATIO` (0x6d2cc304) function
        pub fn max_sqrt_ratio(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([109, 44, 195, 4], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `MIN_SQRT_RATIO` (0xee8847ff) function
        pub fn min_sqrt_ratio(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([238, 136, 71, 255], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `getGasCostOfGetSqrtRatioAtTick` (0xa7398eb4) function
        pub fn get_gas_cost_of_get_sqrt_ratio_at_tick(
            &self,
            tick: i32,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([167, 57, 142, 180], tick)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `getGasCostOfGetTickAtSqrtRatio` (0xb0622f67) function
        pub fn get_gas_cost_of_get_tick_at_sqrt_ratio(
            &self,
            sqrt_price_x96: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([176, 98, 47, 103], sqrt_price_x96)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `getSqrtRatioAtTick` (0x986cfba3) function
        pub fn get_sqrt_ratio_at_tick(
            &self,
            tick: i32,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([152, 108, 251, 163], tick)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `getTickAtSqrtRatio` (0x4f76c058) function
        pub fn get_tick_at_sqrt_ratio(
            &self,
            sqrt_price_x96: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, i32> {
            self.0
                .method_hash([79, 118, 192, 88], sqrt_price_x96)
                .expect("method not found (this should never happen)")
        }
    }
    impl<M: ::ethers::providers::Middleware> From<::ethers::contract::Contract<M>> for TickMathTest<M> {
        fn from(contract: ::ethers::contract::Contract<M>) -> Self {
            Self::new(contract.address(), contract.client())
        }
    }
    ///Container type for all input parameters for the `MAX_SQRT_RATIO` function with signature `MAX_SQRT_RATIO()` and selector `0x6d2cc304`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethcall(name = "MAX_SQRT_RATIO", abi = "MAX_SQRT_RATIO()")]
    pub struct MaxSqrtRatioCall;
    ///Container type for all input parameters for the `MIN_SQRT_RATIO` function with signature `MIN_SQRT_RATIO()` and selector `0xee8847ff`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethcall(name = "MIN_SQRT_RATIO", abi = "MIN_SQRT_RATIO()")]
    pub struct MinSqrtRatioCall;
    ///Container type for all input parameters for the `getGasCostOfGetSqrtRatioAtTick` function with signature `getGasCostOfGetSqrtRatioAtTick(int24)` and selector `0xa7398eb4`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethcall(
        name = "getGasCostOfGetSqrtRatioAtTick",
        abi = "getGasCostOfGetSqrtRatioAtTick(int24)"
    )]
    pub struct GetGasCostOfGetSqrtRatioAtTickCall {
        pub tick: i32,
    }
    ///Container type for all input parameters for the `getGasCostOfGetTickAtSqrtRatio` function with signature `getGasCostOfGetTickAtSqrtRatio(uint160)` and selector `0xb0622f67`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethcall(
        name = "getGasCostOfGetTickAtSqrtRatio",
        abi = "getGasCostOfGetTickAtSqrtRatio(uint160)"
    )]
    pub struct GetGasCostOfGetTickAtSqrtRatioCall {
        pub sqrt_price_x96: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `getSqrtRatioAtTick` function with signature `getSqrtRatioAtTick(int24)` and selector `0x986cfba3`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethcall(name = "getSqrtRatioAtTick", abi = "getSqrtRatioAtTick(int24)")]
    pub struct GetSqrtRatioAtTickCall {
        pub tick: i32,
    }
    ///Container type for all input parameters for the `getTickAtSqrtRatio` function with signature `getTickAtSqrtRatio(uint160)` and selector `0x4f76c058`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethcall(name = "getTickAtSqrtRatio", abi = "getTickAtSqrtRatio(uint160)")]
    pub struct GetTickAtSqrtRatioCall {
        pub sqrt_price_x96: ::ethers::core::types::U256,
    }
    ///Container type for all of the contract's call
    #[derive(Clone, ::ethers::contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum TickMathTestCalls {
        MaxSqrtRatio(MaxSqrtRatioCall),
        MinSqrtRatio(MinSqrtRatioCall),
        GetGasCostOfGetSqrtRatioAtTick(GetGasCostOfGetSqrtRatioAtTickCall),
        GetGasCostOfGetTickAtSqrtRatio(GetGasCostOfGetTickAtSqrtRatioCall),
        GetSqrtRatioAtTick(GetSqrtRatioAtTickCall),
        GetTickAtSqrtRatio(GetTickAtSqrtRatioCall),
    }
    impl ::ethers::core::abi::AbiDecode for TickMathTestCalls {
        fn decode(
            data: impl AsRef<[u8]>,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::AbiError> {
            let data = data.as_ref();
            if let Ok(decoded) = <MaxSqrtRatioCall as ::ethers::core::abi::AbiDecode>::decode(data)
            {
                return Ok(Self::MaxSqrtRatio(decoded));
            }
            if let Ok(decoded) = <MinSqrtRatioCall as ::ethers::core::abi::AbiDecode>::decode(data)
            {
                return Ok(Self::MinSqrtRatio(decoded));
            }
            if let Ok(decoded) =
                <GetGasCostOfGetSqrtRatioAtTickCall as ::ethers::core::abi::AbiDecode>::decode(data)
            {
                return Ok(Self::GetGasCostOfGetSqrtRatioAtTick(decoded));
            }
            if let Ok(decoded) =
                <GetGasCostOfGetTickAtSqrtRatioCall as ::ethers::core::abi::AbiDecode>::decode(data)
            {
                return Ok(Self::GetGasCostOfGetTickAtSqrtRatio(decoded));
            }
            if let Ok(decoded) =
                <GetSqrtRatioAtTickCall as ::ethers::core::abi::AbiDecode>::decode(data)
            {
                return Ok(Self::GetSqrtRatioAtTick(decoded));
            }
            if let Ok(decoded) =
                <GetTickAtSqrtRatioCall as ::ethers::core::abi::AbiDecode>::decode(data)
            {
                return Ok(Self::GetTickAtSqrtRatio(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData.into())
        }
    }
    impl ::ethers::core::abi::AbiEncode for TickMathTestCalls {
        fn encode(self) -> Vec<u8> {
            match self {
                Self::MaxSqrtRatio(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::MinSqrtRatio(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::GetGasCostOfGetSqrtRatioAtTick(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::GetGasCostOfGetTickAtSqrtRatio(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::GetSqrtRatioAtTick(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::GetTickAtSqrtRatio(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
            }
        }
    }
    impl ::core::fmt::Display for TickMathTestCalls {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::MaxSqrtRatio(element) => ::core::fmt::Display::fmt(element, f),
                Self::MinSqrtRatio(element) => ::core::fmt::Display::fmt(element, f),
                Self::GetGasCostOfGetSqrtRatioAtTick(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::GetGasCostOfGetTickAtSqrtRatio(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::GetSqrtRatioAtTick(element) => ::core::fmt::Display::fmt(element, f),
                Self::GetTickAtSqrtRatio(element) => ::core::fmt::Display::fmt(element, f),
            }
        }
    }
    impl ::core::convert::From<MaxSqrtRatioCall> for TickMathTestCalls {
        fn from(value: MaxSqrtRatioCall) -> Self {
            Self::MaxSqrtRatio(value)
        }
    }
    impl ::core::convert::From<MinSqrtRatioCall> for TickMathTestCalls {
        fn from(value: MinSqrtRatioCall) -> Self {
            Self::MinSqrtRatio(value)
        }
    }
    impl ::core::convert::From<GetGasCostOfGetSqrtRatioAtTickCall> for TickMathTestCalls {
        fn from(value: GetGasCostOfGetSqrtRatioAtTickCall) -> Self {
            Self::GetGasCostOfGetSqrtRatioAtTick(value)
        }
    }
    impl ::core::convert::From<GetGasCostOfGetTickAtSqrtRatioCall> for TickMathTestCalls {
        fn from(value: GetGasCostOfGetTickAtSqrtRatioCall) -> Self {
            Self::GetGasCostOfGetTickAtSqrtRatio(value)
        }
    }
    impl ::core::convert::From<GetSqrtRatioAtTickCall> for TickMathTestCalls {
        fn from(value: GetSqrtRatioAtTickCall) -> Self {
            Self::GetSqrtRatioAtTick(value)
        }
    }
    impl ::core::convert::From<GetTickAtSqrtRatioCall> for TickMathTestCalls {
        fn from(value: GetTickAtSqrtRatioCall) -> Self {
            Self::GetTickAtSqrtRatio(value)
        }
    }
    ///Container type for all return fields from the `MAX_SQRT_RATIO` function with signature `MAX_SQRT_RATIO()` and selector `0x6d2cc304`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    pub struct MaxSqrtRatioReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `MIN_SQRT_RATIO` function with signature `MIN_SQRT_RATIO()` and selector `0xee8847ff`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    pub struct MinSqrtRatioReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `getGasCostOfGetSqrtRatioAtTick` function with signature `getGasCostOfGetSqrtRatioAtTick(int24)` and selector `0xa7398eb4`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    pub struct GetGasCostOfGetSqrtRatioAtTickReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `getGasCostOfGetTickAtSqrtRatio` function with signature `getGasCostOfGetTickAtSqrtRatio(uint160)` and selector `0xb0622f67`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    pub struct GetGasCostOfGetTickAtSqrtRatioReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `getSqrtRatioAtTick` function with signature `getSqrtRatioAtTick(int24)` and selector `0x986cfba3`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    pub struct GetSqrtRatioAtTickReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `getTickAtSqrtRatio` function with signature `getTickAtSqrtRatio(uint160)` and selector `0x4f76c058`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    pub struct GetTickAtSqrtRatioReturn(pub i32);
}
