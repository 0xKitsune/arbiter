pub use test_uniswap_v3_swap_pay::*;
/// This module was auto-generated with ethers-rs Abigen.
/// More information at: <https://github.com/gakonst/ethers-rs>
#[allow(
    clippy::enum_variant_names,
    clippy::too_many_arguments,
    clippy::upper_case_acronyms,
    clippy::type_complexity,
    dead_code,
    non_camel_case_types
)]
pub mod test_uniswap_v3_swap_pay {
    #[rustfmt::skip]
    const __ABI: &str = "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\",\"components\":[]},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\",\"components\":[]},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"pay0\",\"type\":\"uint256\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"pay1\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"swap\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\",\"components\":[]},{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\",\"components\":[]},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"uniswapV3SwapCallback\",\"outputs\":[]}]";
    ///The parsed JSON ABI of the contract.
    pub static TESTUNISWAPV3SWAPPAY_ABI: ::ethers::contract::Lazy<::ethers::core::abi::Abi> =
        ::ethers::contract::Lazy::new(|| {
            ::ethers::core::utils::__serde_json::from_str(__ABI).expect("ABI is always valid")
        });
    #[rustfmt::skip]
    const __BYTECODE: &[u8] = &[
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        16,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        4,
        166,
        128,
        97,
        0,
        32,
        96,
        0,
        57,
        96,
        0,
        243,
        254,
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        16,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        4,
        54,
        16,
        97,
        0,
        54,
        87,
        96,
        0,
        53,
        96,
        224,
        28,
        128,
        99,
        241,
        60,
        223,
        144,
        20,
        97,
        0,
        59,
        87,
        128,
        99,
        250,
        70,
        30,
        51,
        20,
        97,
        0,
        143,
        87,
        91,
        96,
        0,
        128,
        253,
        91,
        97,
        0,
        141,
        96,
        4,
        128,
        54,
        3,
        96,
        224,
        129,
        16,
        21,
        97,
        0,
        81,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        53,
        129,
        22,
        145,
        96,
        32,
        129,
        1,
        53,
        130,
        22,
        145,
        96,
        64,
        130,
        1,
        53,
        21,
        21,
        145,
        96,
        96,
        129,
        1,
        53,
        144,
        145,
        22,
        144,
        96,
        128,
        129,
        1,
        53,
        144,
        96,
        160,
        129,
        1,
        53,
        144,
        96,
        192,
        1,
        53,
        97,
        1,
        11,
        86,
        91,
        0,
        91,
        97,
        0,
        141,
        96,
        4,
        128,
        54,
        3,
        96,
        96,
        129,
        16,
        21,
        97,
        0,
        165,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        145,
        96,
        32,
        129,
        1,
        53,
        145,
        129,
        1,
        144,
        96,
        96,
        129,
        1,
        96,
        64,
        130,
        1,
        53,
        100,
        1,
        0,
        0,
        0,
        0,
        129,
        17,
        21,
        97,
        0,
        204,
        87,
        96,
        0,
        128,
        253,
        91,
        130,
        1,
        131,
        96,
        32,
        130,
        1,
        17,
        21,
        97,
        0,
        222,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        53,
        144,
        96,
        32,
        1,
        145,
        132,
        96,
        1,
        131,
        2,
        132,
        1,
        17,
        100,
        1,
        0,
        0,
        0,
        0,
        131,
        17,
        23,
        21,
        97,
        1,
        0,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        144,
        146,
        80,
        144,
        80,
        97,
        2,
        83,
        86,
        91,
        134,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        99,
        18,
        138,
        203,
        8,
        135,
        135,
        134,
        136,
        51,
        136,
        136,
        96,
        64,
        81,
        96,
        32,
        1,
        128,
        132,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        82,
        96,
        32,
        1,
        131,
        129,
        82,
        96,
        32,
        1,
        130,
        129,
        82,
        96,
        32,
        1,
        147,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        96,
        32,
        129,
        131,
        3,
        3,
        129,
        82,
        144,
        96,
        64,
        82,
        96,
        64,
        81,
        134,
        99,
        255,
        255,
        255,
        255,
        22,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        128,
        134,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        82,
        96,
        32,
        1,
        133,
        21,
        21,
        129,
        82,
        96,
        32,
        1,
        132,
        129,
        82,
        96,
        32,
        1,
        131,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        82,
        96,
        32,
        1,
        128,
        96,
        32,
        1,
        130,
        129,
        3,
        130,
        82,
        131,
        129,
        129,
        81,
        129,
        82,
        96,
        32,
        1,
        145,
        80,
        128,
        81,
        144,
        96,
        32,
        1,
        144,
        128,
        131,
        131,
        96,
        0,
        91,
        131,
        129,
        16,
        21,
        97,
        1,
        207,
        87,
        129,
        129,
        1,
        81,
        131,
        130,
        1,
        82,
        96,
        32,
        1,
        97,
        1,
        183,
        86,
        91,
        80,
        80,
        80,
        80,
        144,
        80,
        144,
        129,
        1,
        144,
        96,
        31,
        22,
        128,
        21,
        97,
        1,
        252,
        87,
        128,
        130,
        3,
        128,
        81,
        96,
        1,
        131,
        96,
        32,
        3,
        97,
        1,
        0,
        10,
        3,
        25,
        22,
        129,
        82,
        96,
        32,
        1,
        145,
        80,
        91,
        80,
        150,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        96,
        64,
        128,
        81,
        128,
        131,
        3,
        129,
        96,
        0,
        135,
        128,
        59,
        21,
        128,
        21,
        97,
        2,
        30,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        90,
        241,
        21,
        128,
        21,
        97,
        2,
        50,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        64,
        129,
        16,
        21,
        97,
        2,
        72,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        132,
        132,
        96,
        96,
        129,
        16,
        21,
        97,
        2,
        104,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        53,
        22,
        147,
        80,
        96,
        32,
        129,
        1,
        53,
        146,
        80,
        96,
        64,
        1,
        53,
        144,
        80,
        129,
        21,
        97,
        3,
        121,
        87,
        51,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        99,
        13,
        254,
        22,
        129,
        96,
        64,
        81,
        129,
        99,
        255,
        255,
        255,
        255,
        22,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        128,
        59,
        21,
        128,
        21,
        97,
        2,
        194,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        90,
        250,
        21,
        128,
        21,
        97,
        2,
        214,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        32,
        129,
        16,
        21,
        97,
        2,
        236,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        81,
        96,
        64,
        128,
        81,
        99,
        35,
        184,
        114,
        221,
        96,
        224,
        27,
        129,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        134,
        129,
        22,
        96,
        4,
        131,
        1,
        82,
        51,
        96,
        36,
        131,
        1,
        82,
        96,
        68,
        130,
        1,
        134,
        144,
        82,
        145,
        81,
        145,
        144,
        146,
        22,
        145,
        99,
        35,
        184,
        114,
        221,
        145,
        96,
        100,
        128,
        131,
        1,
        146,
        96,
        32,
        146,
        145,
        144,
        130,
        144,
        3,
        1,
        129,
        96,
        0,
        135,
        128,
        59,
        21,
        128,
        21,
        97,
        3,
        71,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        90,
        241,
        21,
        128,
        21,
        97,
        3,
        91,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        32,
        129,
        16,
        21,
        97,
        3,
        113,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        4,
        103,
        144,
        80,
        86,
        91,
        128,
        21,
        97,
        4,
        103,
        87,
        51,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        99,
        210,
        18,
        32,
        167,
        96,
        64,
        81,
        129,
        99,
        255,
        255,
        255,
        255,
        22,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        128,
        59,
        21,
        128,
        21,
        97,
        3,
        184,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        90,
        250,
        21,
        128,
        21,
        97,
        3,
        204,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        32,
        129,
        16,
        21,
        97,
        3,
        226,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        81,
        96,
        64,
        128,
        81,
        99,
        35,
        184,
        114,
        221,
        96,
        224,
        27,
        129,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        134,
        129,
        22,
        96,
        4,
        131,
        1,
        82,
        51,
        96,
        36,
        131,
        1,
        82,
        96,
        68,
        130,
        1,
        133,
        144,
        82,
        145,
        81,
        145,
        144,
        146,
        22,
        145,
        99,
        35,
        184,
        114,
        221,
        145,
        96,
        100,
        128,
        131,
        1,
        146,
        96,
        32,
        146,
        145,
        144,
        130,
        144,
        3,
        1,
        129,
        96,
        0,
        135,
        128,
        59,
        21,
        128,
        21,
        97,
        4,
        61,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        90,
        241,
        21,
        128,
        21,
        97,
        4,
        81,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        32,
        129,
        16,
        21,
        97,
        2,
        72,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        254,
        162,
        100,
        105,
        112,
        102,
        115,
        88,
        34,
        18,
        32,
        136,
        194,
        73,
        235,
        222,
        93,
        16,
        64,
        13,
        82,
        28,
        1,
        218,
        58,
        218,
        202,
        217,
        174,
        247,
        63,
        187,
        64,
        92,
        60,
        54,
        237,
        94,
        17,
        143,
        104,
        113,
        2,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        7,
        6,
        0,
        51,
    ];
    ///The bytecode of the contract.
    pub static TESTUNISWAPV3SWAPPAY_BYTECODE: ::ethers::core::types::Bytes =
        ::ethers::core::types::Bytes::from_static(__BYTECODE);
    #[rustfmt::skip]
    const __DEPLOYED_BYTECODE: &[u8] = &[
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        16,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        4,
        54,
        16,
        97,
        0,
        54,
        87,
        96,
        0,
        53,
        96,
        224,
        28,
        128,
        99,
        241,
        60,
        223,
        144,
        20,
        97,
        0,
        59,
        87,
        128,
        99,
        250,
        70,
        30,
        51,
        20,
        97,
        0,
        143,
        87,
        91,
        96,
        0,
        128,
        253,
        91,
        97,
        0,
        141,
        96,
        4,
        128,
        54,
        3,
        96,
        224,
        129,
        16,
        21,
        97,
        0,
        81,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        53,
        129,
        22,
        145,
        96,
        32,
        129,
        1,
        53,
        130,
        22,
        145,
        96,
        64,
        130,
        1,
        53,
        21,
        21,
        145,
        96,
        96,
        129,
        1,
        53,
        144,
        145,
        22,
        144,
        96,
        128,
        129,
        1,
        53,
        144,
        96,
        160,
        129,
        1,
        53,
        144,
        96,
        192,
        1,
        53,
        97,
        1,
        11,
        86,
        91,
        0,
        91,
        97,
        0,
        141,
        96,
        4,
        128,
        54,
        3,
        96,
        96,
        129,
        16,
        21,
        97,
        0,
        165,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        145,
        96,
        32,
        129,
        1,
        53,
        145,
        129,
        1,
        144,
        96,
        96,
        129,
        1,
        96,
        64,
        130,
        1,
        53,
        100,
        1,
        0,
        0,
        0,
        0,
        129,
        17,
        21,
        97,
        0,
        204,
        87,
        96,
        0,
        128,
        253,
        91,
        130,
        1,
        131,
        96,
        32,
        130,
        1,
        17,
        21,
        97,
        0,
        222,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        53,
        144,
        96,
        32,
        1,
        145,
        132,
        96,
        1,
        131,
        2,
        132,
        1,
        17,
        100,
        1,
        0,
        0,
        0,
        0,
        131,
        17,
        23,
        21,
        97,
        1,
        0,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        144,
        146,
        80,
        144,
        80,
        97,
        2,
        83,
        86,
        91,
        134,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        99,
        18,
        138,
        203,
        8,
        135,
        135,
        134,
        136,
        51,
        136,
        136,
        96,
        64,
        81,
        96,
        32,
        1,
        128,
        132,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        82,
        96,
        32,
        1,
        131,
        129,
        82,
        96,
        32,
        1,
        130,
        129,
        82,
        96,
        32,
        1,
        147,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        96,
        32,
        129,
        131,
        3,
        3,
        129,
        82,
        144,
        96,
        64,
        82,
        96,
        64,
        81,
        134,
        99,
        255,
        255,
        255,
        255,
        22,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        128,
        134,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        82,
        96,
        32,
        1,
        133,
        21,
        21,
        129,
        82,
        96,
        32,
        1,
        132,
        129,
        82,
        96,
        32,
        1,
        131,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        82,
        96,
        32,
        1,
        128,
        96,
        32,
        1,
        130,
        129,
        3,
        130,
        82,
        131,
        129,
        129,
        81,
        129,
        82,
        96,
        32,
        1,
        145,
        80,
        128,
        81,
        144,
        96,
        32,
        1,
        144,
        128,
        131,
        131,
        96,
        0,
        91,
        131,
        129,
        16,
        21,
        97,
        1,
        207,
        87,
        129,
        129,
        1,
        81,
        131,
        130,
        1,
        82,
        96,
        32,
        1,
        97,
        1,
        183,
        86,
        91,
        80,
        80,
        80,
        80,
        144,
        80,
        144,
        129,
        1,
        144,
        96,
        31,
        22,
        128,
        21,
        97,
        1,
        252,
        87,
        128,
        130,
        3,
        128,
        81,
        96,
        1,
        131,
        96,
        32,
        3,
        97,
        1,
        0,
        10,
        3,
        25,
        22,
        129,
        82,
        96,
        32,
        1,
        145,
        80,
        91,
        80,
        150,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        96,
        64,
        128,
        81,
        128,
        131,
        3,
        129,
        96,
        0,
        135,
        128,
        59,
        21,
        128,
        21,
        97,
        2,
        30,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        90,
        241,
        21,
        128,
        21,
        97,
        2,
        50,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        64,
        129,
        16,
        21,
        97,
        2,
        72,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        132,
        132,
        96,
        96,
        129,
        16,
        21,
        97,
        2,
        104,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        53,
        22,
        147,
        80,
        96,
        32,
        129,
        1,
        53,
        146,
        80,
        96,
        64,
        1,
        53,
        144,
        80,
        129,
        21,
        97,
        3,
        121,
        87,
        51,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        99,
        13,
        254,
        22,
        129,
        96,
        64,
        81,
        129,
        99,
        255,
        255,
        255,
        255,
        22,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        128,
        59,
        21,
        128,
        21,
        97,
        2,
        194,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        90,
        250,
        21,
        128,
        21,
        97,
        2,
        214,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        32,
        129,
        16,
        21,
        97,
        2,
        236,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        81,
        96,
        64,
        128,
        81,
        99,
        35,
        184,
        114,
        221,
        96,
        224,
        27,
        129,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        134,
        129,
        22,
        96,
        4,
        131,
        1,
        82,
        51,
        96,
        36,
        131,
        1,
        82,
        96,
        68,
        130,
        1,
        134,
        144,
        82,
        145,
        81,
        145,
        144,
        146,
        22,
        145,
        99,
        35,
        184,
        114,
        221,
        145,
        96,
        100,
        128,
        131,
        1,
        146,
        96,
        32,
        146,
        145,
        144,
        130,
        144,
        3,
        1,
        129,
        96,
        0,
        135,
        128,
        59,
        21,
        128,
        21,
        97,
        3,
        71,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        90,
        241,
        21,
        128,
        21,
        97,
        3,
        91,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        32,
        129,
        16,
        21,
        97,
        3,
        113,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        4,
        103,
        144,
        80,
        86,
        91,
        128,
        21,
        97,
        4,
        103,
        87,
        51,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        99,
        210,
        18,
        32,
        167,
        96,
        64,
        81,
        129,
        99,
        255,
        255,
        255,
        255,
        22,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        128,
        59,
        21,
        128,
        21,
        97,
        3,
        184,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        90,
        250,
        21,
        128,
        21,
        97,
        3,
        204,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        32,
        129,
        16,
        21,
        97,
        3,
        226,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        81,
        96,
        64,
        128,
        81,
        99,
        35,
        184,
        114,
        221,
        96,
        224,
        27,
        129,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        134,
        129,
        22,
        96,
        4,
        131,
        1,
        82,
        51,
        96,
        36,
        131,
        1,
        82,
        96,
        68,
        130,
        1,
        133,
        144,
        82,
        145,
        81,
        145,
        144,
        146,
        22,
        145,
        99,
        35,
        184,
        114,
        221,
        145,
        96,
        100,
        128,
        131,
        1,
        146,
        96,
        32,
        146,
        145,
        144,
        130,
        144,
        3,
        1,
        129,
        96,
        0,
        135,
        128,
        59,
        21,
        128,
        21,
        97,
        4,
        61,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        90,
        241,
        21,
        128,
        21,
        97,
        4,
        81,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        32,
        129,
        16,
        21,
        97,
        2,
        72,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        254,
        162,
        100,
        105,
        112,
        102,
        115,
        88,
        34,
        18,
        32,
        136,
        194,
        73,
        235,
        222,
        93,
        16,
        64,
        13,
        82,
        28,
        1,
        218,
        58,
        218,
        202,
        217,
        174,
        247,
        63,
        187,
        64,
        92,
        60,
        54,
        237,
        94,
        17,
        143,
        104,
        113,
        2,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        7,
        6,
        0,
        51,
    ];
    ///The deployed bytecode of the contract.
    pub static TESTUNISWAPV3SWAPPAY_DEPLOYED_BYTECODE: ::ethers::core::types::Bytes =
        ::ethers::core::types::Bytes::from_static(__DEPLOYED_BYTECODE);
    pub struct TestUniswapV3SwapPay<M>(::ethers::contract::Contract<M>);
    impl<M> ::core::clone::Clone for TestUniswapV3SwapPay<M> {
        fn clone(&self) -> Self {
            Self(::core::clone::Clone::clone(&self.0))
        }
    }
    impl<M> ::core::ops::Deref for TestUniswapV3SwapPay<M> {
        type Target = ::ethers::contract::Contract<M>;
        fn deref(&self) -> &Self::Target {
            &self.0
        }
    }
    impl<M> ::core::ops::DerefMut for TestUniswapV3SwapPay<M> {
        fn deref_mut(&mut self) -> &mut Self::Target {
            &mut self.0
        }
    }
    impl<M> ::core::fmt::Debug for TestUniswapV3SwapPay<M> {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            f.debug_tuple(stringify!(TestUniswapV3SwapPay))
                .field(&self.address())
                .finish()
        }
    }
    impl<M: ::ethers::providers::Middleware> TestUniswapV3SwapPay<M> {
        /// Creates a new contract instance with the specified `ethers` client at
        /// `address`. The contract derefs to a `ethers::Contract` object.
        pub fn new<T: Into<::ethers::core::types::Address>>(
            address: T,
            client: ::std::sync::Arc<M>,
        ) -> Self {
            Self(::ethers::contract::Contract::new(
                address.into(),
                TESTUNISWAPV3SWAPPAY_ABI.clone(),
                client,
            ))
        }
        /// Constructs the general purpose `Deployer` instance based on the provided constructor arguments and sends it.
        /// Returns a new instance of a deployer that returns an instance of this contract after sending the transaction
        ///
        /// Notes:
        /// - If there are no constructor arguments, you should pass `()` as the argument.
        /// - The default poll duration is 7 seconds.
        /// - The default number of confirmations is 1 block.
        ///
        ///
        /// # Example
        ///
        /// Generate contract bindings with `abigen!` and deploy a new contract instance.
        ///
        /// *Note*: this requires a `bytecode` and `abi` object in the `greeter.json` artifact.
        ///
        /// ```ignore
        /// # async fn deploy<M: ethers::providers::Middleware>(client: ::std::sync::Arc<M>) {
        ///     abigen!(Greeter, "../greeter.json");
        ///
        ///    let greeter_contract = Greeter::deploy(client, "Hello world!".to_string()).unwrap().send().await.unwrap();
        ///    let msg = greeter_contract.greet().call().await.unwrap();
        /// # }
        /// ```
        pub fn deploy<T: ::ethers::core::abi::Tokenize>(
            client: ::std::sync::Arc<M>,
            constructor_args: T,
        ) -> ::core::result::Result<
            ::ethers::contract::builders::ContractDeployer<M, Self>,
            ::ethers::contract::ContractError<M>,
        > {
            let factory = ::ethers::contract::ContractFactory::new(
                TESTUNISWAPV3SWAPPAY_ABI.clone(),
                TESTUNISWAPV3SWAPPAY_BYTECODE.clone().into(),
                client,
            );
            let deployer = factory.deploy(constructor_args)?;
            let deployer = ::ethers::contract::ContractDeployer::new(deployer);
            Ok(deployer)
        }
        ///Calls the contract's `swap` (0xf13cdf90) function
        pub fn swap(
            &self,
            pool: ::ethers::core::types::Address,
            recipient: ::ethers::core::types::Address,
            zero_for_one: bool,
            sqrt_price_x96: ::ethers::core::types::U256,
            amount_specified: ::ethers::core::types::I256,
            pay_0: ::ethers::core::types::U256,
            pay_1: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash(
                    [241, 60, 223, 144],
                    (
                        pool,
                        recipient,
                        zero_for_one,
                        sqrt_price_x96,
                        amount_specified,
                        pay_0,
                        pay_1,
                    ),
                )
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `uniswapV3SwapCallback` (0xfa461e33) function
        pub fn uniswap_v3_swap_callback(
            &self,
            p0: ::ethers::core::types::I256,
            p1: ::ethers::core::types::I256,
            data: ::ethers::core::types::Bytes,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([250, 70, 30, 51], (p0, p1, data))
                .expect("method not found (this should never happen)")
        }
    }
    impl<M: ::ethers::providers::Middleware> From<::ethers::contract::Contract<M>>
        for TestUniswapV3SwapPay<M>
    {
        fn from(contract: ::ethers::contract::Contract<M>) -> Self {
            Self::new(contract.address(), contract.client())
        }
    }
    ///Container type for all input parameters for the `swap` function with signature `swap(address,address,bool,uint160,int256,uint256,uint256)` and selector `0xf13cdf90`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethcall(
        name = "swap",
        abi = "swap(address,address,bool,uint160,int256,uint256,uint256)"
    )]
    pub struct SwapCall {
        pub pool: ::ethers::core::types::Address,
        pub recipient: ::ethers::core::types::Address,
        pub zero_for_one: bool,
        pub sqrt_price_x96: ::ethers::core::types::U256,
        pub amount_specified: ::ethers::core::types::I256,
        pub pay_0: ::ethers::core::types::U256,
        pub pay_1: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `uniswapV3SwapCallback` function with signature `uniswapV3SwapCallback(int256,int256,bytes)` and selector `0xfa461e33`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethcall(
        name = "uniswapV3SwapCallback",
        abi = "uniswapV3SwapCallback(int256,int256,bytes)"
    )]
    pub struct UniswapV3SwapCallbackCall {
        pub p0: ::ethers::core::types::I256,
        pub p1: ::ethers::core::types::I256,
        pub data: ::ethers::core::types::Bytes,
    }
    ///Container type for all of the contract's call
    #[derive(Clone, ::ethers::contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum TestUniswapV3SwapPayCalls {
        Swap(SwapCall),
        UniswapV3SwapCallback(UniswapV3SwapCallbackCall),
    }
    impl ::ethers::core::abi::AbiDecode for TestUniswapV3SwapPayCalls {
        fn decode(
            data: impl AsRef<[u8]>,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::AbiError> {
            let data = data.as_ref();
            if let Ok(decoded) = <SwapCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Swap(decoded));
            }
            if let Ok(decoded) =
                <UniswapV3SwapCallbackCall as ::ethers::core::abi::AbiDecode>::decode(data)
            {
                return Ok(Self::UniswapV3SwapCallback(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData.into())
        }
    }
    impl ::ethers::core::abi::AbiEncode for TestUniswapV3SwapPayCalls {
        fn encode(self) -> Vec<u8> {
            match self {
                Self::Swap(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::UniswapV3SwapCallback(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
            }
        }
    }
    impl ::core::fmt::Display for TestUniswapV3SwapPayCalls {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::Swap(element) => ::core::fmt::Display::fmt(element, f),
                Self::UniswapV3SwapCallback(element) => ::core::fmt::Display::fmt(element, f),
            }
        }
    }
    impl ::core::convert::From<SwapCall> for TestUniswapV3SwapPayCalls {
        fn from(value: SwapCall) -> Self {
            Self::Swap(value)
        }
    }
    impl ::core::convert::From<UniswapV3SwapCallbackCall> for TestUniswapV3SwapPayCalls {
        fn from(value: UniswapV3SwapCallbackCall) -> Self {
            Self::UniswapV3SwapCallback(value)
        }
    }
}
